{
  "openapi": "3.0.1",
  "info": {
    "title": "API продавца",
    "version": "2.4",
    "x-logo": {
      "url": "./lang/ru.png",
      "altText": "ru",
      "href": "./en/index.html"
    },
    "description": "# Общее описание\n<style> .langChange {\n  text-align: left;\n  padding: 2px 222px 2px 18px;\n} </style> <style> .new {\n  display: inline-block;\n  padding: 2px 8px;\n  margin: 0;\n  background-color: #ffa500;\n  color: #ffffff;\n  font-size: 13px;\n  vertical-align: middle;\n  line-height: 1.6;\n  border-radius: 4px;\n  font-weight: 600;\n  font-size: 12px;\n} </style> <style> .newM {\n  padding: 5px 10px;\n  display: inline-block;\n  background-color: #ffa500;\n  color: #ffffff;\n  cursor: pointer;\n  text-align: center;\n  outline: none;\n  margin: 0 5px 5px 5px;\n  #border: 1px solid #07090b;\n  border-radius: 5px;\n  min-width: 60px;\n  font-size: 0.9em;\n  font-weight: bold;\n} </style>\n\nWildberries API предоставляет продавцам возможность управления магазином и получения оперативной и статистической информации по протоколу HTTP RestAPI. <br> Описание API предоставляется в формате [Swagger](https://swagger.io/) (Open API) и может быть использовано для импорта в другие инструменты (такие как PostMan) или генерации клиентского кода на различных языках программирования с помощью [Swagger CodeGen](https://swagger.io/tools/swagger-codegen/)\n\n<ul> <li> Описание в оригинальном swagger-формате <a href=\"/swagger\">swagger</a> <li> OpenAPI-файл <a href=\"/swagger.yaml\">swagger.yaml</a> </ul>\n\n<br> Для ручной проверки API вы можете использовать: <ul> <li> Под ОС Windows - [PostMan](https://www.postman.com/) <li> Под ОС Linux - [curl](https://curl.se/)  </ul> <br>\n\n## Поддержка\nТехническая поддержка осуществляется через диалоги в личном кабинете продавца. При создании нового обращения в техподдержку используйте категорию API.\n<br> Новости и изменения, касающиеся API, публикуются в [новостной ленте Wildberries](https://seller.wildberries.ru/news). <br> <br> <br>\n\n## Авторизация\nАвторизация осуществляется по токенам API, которые  владелец личного кабинета (главный пользователь) самостоятельно\n генерирует в разделе \n [Профиль --> Настройки --> Доступ к API](https://seller.wildberries.ru/supplier-settings/access-to-api). \n <br>\n <br>\n Существует три типа токенов:\n  <ol>\n    <li>Стандартный. Используется для работы с методами из разделов: Цены, Промокоды и скидки, Контент, Marketplace, Рекомендации, Отзывы, Вопросы.</li>\n    <li>Статистика. Используется для работы с методами из раздела Статистика.</li>\n    <li>Реклама. Используется для работы с методами из раздела Реклама.</li>\n  </ol>\n  \nОбратите внимание, что токен отображается ТОЛЬКО в момент создания. Его надо сохранить, потому что больше его отобразить будет нельзя. <br>Созданный токен следует добавлять в каждый запрос, прибавляя к запросу заголовок (http-header) формата `Authorization: .........`. <br> <br> <br>\n## Форматы\n### Дата и время\nВо всех методах API статистики дата и время передаются в формате [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).  <br> В большинстве случаев вы можете передать дату или дату со временем. Если время не указано, оно принимается равным 00:00:00. Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает часовой пояс UTC. При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br> Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> <br>\n## Release Notes\n<p>Для просмотра обновлений перейдите по <span><a href=\"./releasenotes/index.html\" target=\"_blank\">ссылке</a></span>.</p>\n"
  },
  "x-tagGroups": [
    {
      "name": "Цены",
      "tags": ["Цены"]
    },
    {
      "name": "Промокоды и скидки",
      "tags": ["Промокоды и скидки"]
    },
    {
      "name": "Контент",
      "tags": [
        "Контент / Загрузка",
        "Контент / Просмотр",
        "Контент / Конфигуратор",
        "Контент / Медиафайлы",
        "Контент / Теги",
        "Контент / Корзина"
      ]
    },
    {
      "name": "Marketplace",
      "tags": [
        "Marketplace / Сборочные задания",
        "Marketplace / Остатки"
      ]
    },
    {
      "name": "Статистика",
      "tags": ["Статистика", "Статистика / Тестовый контур"]
    },
    {
      "name": "Реклама",
      "tags": ["Реклама"]
    },
    {
      "name": "Рекомендации",
      "tags": ["Рекомендации"]
    },
    {
      "name": "Вопросы",
      "tags": ["Вопросы"]
    },
    {
      "name": "Отзывы",
      "tags": ["Отзывы"]
    }
  ],
  "security": [
    {
      "HeaderApiKey": []
    }
  ],
  "components": {
    "securitySchemes": {
      "HeaderApiKey": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "TokenMissing": {
        "description": "Токен отсутствует",
        "type": "string",
        "example": "proxy: unauthorized"
      },
      "TokenInvalid": {
        "description": "Токен недействителен",
        "type": "string",
        "example": "proxy: invalid token"
      },
      "TokenNotFound": {
        "description": "Токен удален",
        "type": "string",
        "example": "proxy: not found"
      },
      "responseBodyError400": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean",
            "example": true
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string",
            "example": "Текст ошибки"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки",
            "type": "object",
            "example": {
              "MoveNmsToTrash": "Bad request"
            }
          }
        }
      },
      "responseBodyError403": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean",
            "example": true
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string",
            "example": "Доступ запрещен"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки",
            "type": "string",
            "example": "Доступ запрещен"
          }
        }
      },
      "creatingOneCard": {
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "characteristics": {
                "description": "Массив характеристик, индивидуальный для каждой категории",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "vendorCode": {
                "description": "Артикул продавца",
                "type": "string"
              },
              "sizes": {
                "description": "Массив размеров для номенклатуры (для безразмерного товара все равно нужно передавать данный массив без параметров (`wbSize` и `techSize`), но с ценой и баркодом)",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "techSize": {
                      "description": "Размер товара (пример S, M, L, XL, 42, 42-43)",
                      "type": "string"
                    },
                    "wbSize": {
                      "description": "Российский размер товара",
                      "type": "string"
                    },
                    "price": {
                      "description": "Цена",
                      "type": "integer"
                    },
                    "skus": {
                      "description": "Массив баркодов, строковых идентификаторов размеров товара (их можно сгенерировать с помощью API, см. раздел \"Контент / Просмотр\")",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "example": [
          [
            {
              "characteristics": [
                {
                  "ТНВЭД": "4203100001"
                },
                {
                  "Ширина упаковки": 2
                },
                {
                  "Длина упаковки": 2
                },
                {
                  "Высота упаковки": 2
                },
                {
                  "Пол": ["Женский"]
                },
                {
                  "Цвет": "красный"
                },
                {
                  "Предмет": "Платья"
                },
                {
                  "Стилистика": ["casual"]
                },
                {
                  "Комплектация": ["Платье женское - 1шт"]
                },
                {
                  "Бренд": ["GlisH"]
                }
              ],
              "vendorCode": "ttteeessstt-1",
              "sizes": [
                {
                  "techSize": "38-39",
                  "wbSize": "38-39",
                  "price": 3000,
                  "skus": ["test333333331"]
                }
              ]
            }
          ]
        ]
      },
      "creatingMergedCards": {
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "characteristics": {
                "description": "Массив характеристик, индивидуальный для каждой категории",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "vendorCode": {
                "description": "Артикул продавца",
                "type": "string"
              },
              "sizes": {
                "description": "Массив размеров для номенклатуры (для безразмерного товара все равно нужно передавать данный массив без параметров (`wbSize` и `techSize`), но с ценой и баркодом)",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "techSize": {
                      "description": "Размер товара (пример S, M, L, XL, 42, 42-43)",
                      "type": "string"
                    },
                    "wbSize": {
                      "description": "Российский размер товара",
                      "type": "string"
                    },
                    "price": {
                      "description": "Цена",
                      "type": "integer"
                    },
                    "skus": {
                      "description": "Массив баркодов, строковых идентификаторов размеров товара (их можно сгенерировать с помощью API, см. раздел \"Контент / Просмотр\")",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "example": [
          [
            {
              "characteristics": [
                {
                  "ТНВЭД": "4203100001"
                },
                {
                  "Пол": ["Женский"]
                },
                {
                  "Цвет": "красный"
                },
                {
                  "Предмет": "Платья"
                },
                {
                  "Стилистика": ["casual"]
                },
                {
                  "Комплектация": [
                    "Шлепанцы женские на нескользящей подошве - 1 пара"
                  ]
                },
                {
                  "Бренд": ["GlisH"]
                },
                {
                  "Высота упаковки": 1
                },
                {
                  "Длина упаковки": 1
                },
                {
                  "Ширина упаковки": 1
                }
              ],
              "vendorCode": "Primer0",
              "sizes": [
                {
                  "techSize": "38-39",
                  "wbSize": "38-39",
                  "price": 3000,
                  "skus": ["test33"]
                },
                {
                  "techSize": "36-37",
                  "wbSize": "36-37",
                  "price": 3000,
                  "skus": ["test22"]
                },
                {
                  "techSize": "40-41",
                  "wbSize": "40-41",
                  "price": 3000,
                  "skus": ["test11"]
                }
              ]
            },
            {
              "characteristics": [
                {
                  "ТНВЭД": "4203100001"
                },
                {
                  "Пол": ["Женский"]
                },
                {
                  "Предмет": "Платья"
                },
                {
                  "Стилистика": ["casual"]
                },
                {
                  "Комплектация": [
                    "Шлепанцы женские на нескользящей подошве - 1 пара"
                  ]
                },
                {
                  "Бренд": ["GlisH"]
                },
                {
                  "Цвет": "зеленый"
                },
                {
                  "Высота упаковки": 1
                },
                {
                  "Глубина упаковки": 1
                },
                {
                  "Ширина упаковки": 1
                }
              ],
              "vendorCode": "Primer1",
              "sizes": [
                {
                  "techSize": "38-39",
                  "wbSize": "38-39",
                  "price": 2000,
                  "skus": ["barcode111"]
                },
                {
                  "techSize": "36-37",
                  "wbSize": "36-37",
                  "price": 2000,
                  "skus": ["barcode222"]
                },
                {
                  "techSize": "40-41",
                  "wbSize": "40-41",
                  "price": 2000,
                  "skus": ["barcode333"]
                }
              ]
            }
          ]
        ]
      },
      "creatingGroupOfIndividualCards": {
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "characteristics": {
                "description": "Массив характеристик, индивидуальный для каждой категории",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "vendorCode": {
                "description": "Артикул продавца",
                "type": "string"
              },
              "sizes": {
                "description": "Массив размеров для номенклатуры (для безразмерного товара все равно нужно передавать данный массив без параметров (`wbSize` и `techSize`), но с ценой и баркодом)",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "techSize": {
                      "description": "Размер товара (пример S, M, L, XL, 42, 42-43)",
                      "type": "string"
                    },
                    "wbSize": {
                      "description": "Российский размер товара",
                      "type": "string"
                    },
                    "price": {
                      "description": "Цена",
                      "type": "integer"
                    },
                    "skus": {
                      "description": "Массив баркодов, строковых идентификаторов размеров товара (их можно сгенерировать с помощью API, см. раздел \"Контент / Просмотр\")",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "example": [
          [
            {
              "characteristics": [
                {
                  "ТНВЭД": "4203100001"
                },
                {
                  "Пол": ["Женский"]
                },
                {
                  "Предмет": "Платья"
                },
                {
                  "Стилистика": ["casual"]
                },
                {
                  "Комплектация": [
                    "Шлепанцы женские на нескользящей подошве - 1 пара"
                  ]
                },
                {
                  "Бренд": ["GlisH"]
                },
                {
                  "Высота упаковки": 1
                },
                {
                  "Длина упаковки": 1
                },
                {
                  "Ширина упаковки": 1
                }
              ],
              "vendorCode": "ttt6eee1ssst3t-1",
              "sizes": [
                {
                  "techSize": "38-39",
                  "wbSize": "38-39",
                  "price": 3000,
                  "skus": ["2036870643946"]
                },
                {
                  "techSize": "36-37",
                  "wbSize": "36-37",
                  "price": 3000,
                  "skus": ["2036870643939"]
                },
                {
                  "techSize": "40-41",
                  "wbSize": "40-41",
                  "price": 3000,
                  "skus": ["2036870643953"]
                }
              ]
            }
          ],
          [
            {
              "characteristics": [
                {
                  "ТНВЭД": "4203100001"
                },
                {
                  "Пол": ["Женский"]
                },
                {
                  "Предмет": "Платья"
                },
                {
                  "Стилистика": ["casual"]
                },
                {
                  "Комплектация": [
                    "Шлепанцы женские на нескользящей подошве - 1 пара"
                  ]
                },
                {
                  "Бренд": ["GlisH"]
                },
                {
                  "Высота упаковки": 1
                },
                {
                  "Глубина упаковки": 1
                },
                {
                  "Ширина упаковки": 1
                }
              ],
              "vendorCode": "ttteeesss3t3t-2",
              "sizes": [
                {
                  "techSize": "38-39",
                  "wbSize": "38-39",
                  "price": 2000,
                  "skus": ["2036870643960"]
                },
                {
                  "techSize": "36-37",
                  "wbSize": "36-37",
                  "price": 2000,
                  "skus": ["2036870643977"]
                },
                {
                  "techSize": "40-41",
                  "wbSize": "40-41",
                  "price": 2000,
                  "skus": ["2036870643984"]
                }
              ]
            }
          ]
        ]
      },
      "responseOK200": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean"
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки"
          }
        },
        "example": {
          "data": null,
          "error": false,
          "errorText": "",
          "additionalErrors": null
        }
      },
      "responseNotFound200": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean"
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки",
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "data": null,
          "error": true,
          "errorText": "Неправильный запрос",
          "additionalErrors": {
            "description": "Такого тега не существует у продавца"
          }
        }
      },
      "responseNotFound200Del": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean"
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки",
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "data": null,
          "error": true,
          "errorText": "Такого тега не существует",
          "additionalErrors": {
            "tagID": "1234"
          }
        }
      },
      "responseBody400LenName": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean"
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки",
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "data": null,
          "error": true,
          "errorText": "Недопустимое значение наименования тега",
          "additionalErrors": {
            "description": "Cлишком длинное название тега. Разрешено не более 15 символов"
          }
        }
      },
      "responseBodyLimitTag": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean"
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки"
          }
        },
        "example": {
          "data": null,
          "error": true,
          "errorText": "Исчерпан лимит на создание тегов",
          "additionalErrors": null
        }
      },
      "responseBodyNameNotExist": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean"
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки"
          }
        },
        "example": {
          "data": null,
          "error": true,
          "errorText": "Тег с таким именем уже существует",
          "additionalErrors": null
        }
      },
      "responseBodyTagNotExist": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean"
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки",
            "properties": {
              "tagID": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "data": null,
          "error": true,
          "errorText": "Такого тега не существует",
          "additionalErrors": {
            "tagID": "1234"
          }
        }
      },
      "IncorrectRequest": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean"
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки",
            "properties": {
              "description": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "data": null,
          "error": true,
          "errorText": "Неправильный запрос",
          "additionalErrors": {
            "description": "Указаны несуществующие теги"
          }
        }
      },
      "responseBodyError500": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки",
            "type": "boolean"
          },
          "errorText": {
            "description": "Описание ошибки",
            "type": "string"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки"
          }
        },
        "example": {
          "data": null,
          "error": true,
          "errorText": "Внутренняя ошибка.",
          "additionalErrors": null
        }
      },
      "Error": {
        "type": "object",
        "nullable": false,
        "properties": {
          "code": {
            "type": "string",
            "description": "Код ошибки",
            "nullable": false
          },
          "message": {
            "type": "string",
            "description": "Описание ошибки",
            "nullable": false
          },
          "data": {
            "type": "object",
            "description": "Дополнительные данные, обогащающие ошибку",
            "nullable": true
          }
        }
      },
      "Next": {
        "type": "integer",
        "format": "int64",
        "nullable": false,
        "description": "Параметр пагинации. Содержит значение, которое необходимо указать в запросе для получения следующего пакета данных"
      },
      "Supply": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Идентификатор поставки",
            "example": "WB-GI-1234567"
          },
          "done": {
            "type": "boolean",
            "nullable": false,
            "description": "Флаг закрытия поставки"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Дата создания поставки (RFC3339)",
            "example": "2022-05-04T07:56:29Z"
          },
          "closedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Дата закрытия поставки (RFC3339)",
            "example": "2022-05-04T07:56:29Z"
          },
          "scanDt": {
            "type": "string",
            "nullable": false,
            "format": "date-time",
            "description": "Дата скана поставки (RFC3339)",
            "example": "2022-05-04T07:56:29Z"
          },
          "name": {
            "type": "string",
            "nullable": false,
            "description": "Наименование поставки",
            "example": "Тестовая поставка"
          },
          "isLargeCargo": {
            "type": "boolean",
            "nullable": true,
            "description": "сКГТ-признак поставки"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": false,
            "description": "Идентификатор сборочного задания в Маркетплейсе",
            "example": 13833711
          },
          "rid": {
            "type": "string",
            "nullable": false,
            "description": "Идентификатор сборочного задания в системе Wildberries",
            "example": "f884001e44e511edb8780242ac120002"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Дата создания сборочного задания (RFC3339)",
            "example": "2022-05-04T07:56:29Z"
          },
          "warehouseId": {
            "type": "integer",
            "nullable": false,
            "description": "Идентификатор склада продавца, на который поступило сборочное задание",
            "example": 658434
          },
          "supplyId": {
            "type": "string",
            "description": "Идентификатор поставки. Возвращается, если заказ закреплён за поставкой"
          },
          "prioritySc": {
            "type": "array",
            "nullable": false,
            "description": "Массив приоритетных СЦ для доставки сборочного задания. Если поле не заполнено или массив пустой, приоритетного СЦ для данного сборочного задания нет",
            "items": {
              "type": "string"
            }
          },
          "offices": {
            "type": "array",
            "nullable": true,
            "description": "Список офисов, куда следует привезти товар",
            "items": {
              "type": "string",
              "example": "Калуга"
            }
          },
          "address": {
            "type": "object",
            "nullable": true,
            "description": "Детализованный адрес покупателя для доставки (если применимо). Некоторые из полей могут прийти пустыми из-за специфики адреса",
            "properties": {
              "province": {
                "type": "string",
                "nullable": false,
                "description": "Область",
                "example": "Челябинская область"
              },
              "area": {
                "type": "string",
                "nullable": false,
                "description": "Район",
                "example": "Челябинск"
              },
              "city": {
                "type": "string",
                "nullable": false,
                "description": "Город",
                "example": "Город"
              },
              "street": {
                "type": "string",
                "nullable": false,
                "description": "Улица",
                "example": "51-я улица Арабкира"
              },
              "home": {
                "type": "string",
                "nullable": false,
                "description": "Номер дома",
                "example": "10А"
              },
              "flat": {
                "type": "string",
                "nullable": false,
                "description": "Номер квартиры",
                "example": "42"
              },
              "entrance": {
                "type": "string",
                "nullable": false,
                "description": "Подъезд",
                "example": "3"
              },
              "longitude": {
                "type": "number",
                "format": "float64",
                "nullable": false,
                "description": "Координата долготы",
                "example": 44.519068
              },
              "latitude": {
                "type": "number",
                "format": "float64",
                "nullable": false,
                "description": "Координаты широты",
                "example": 40.20192
              }
            }
          },
          "user": {
            "type": "object",
            "nullable": true,
            "description": "Информация о покупателе (только для доставки силами продавца)",
            "properties": {
              "fio": {
                "type": "string",
                "nullable": false,
                "description": "ФИО"
              },
              "phone": {
                "type": "string",
                "nullable": false,
                "description": "Номер телефона"
              }
            }
          },
          "skus": {
            "type": "array",
            "nullable": false,
            "description": "Массив баркодов товара",
            "items": {
              "type": "string",
              "example": 6665956397512
            }
          },
          "price": {
            "type": "integer",
            "nullable": false,
            "description": "Цена в валюте продажи с учетом всех скидок, умноженная на 100. Код валюты продажи в поле currencyCode."
          },
          "convertedPrice": {
            "type": "integer",
            "nullable": false,
            "description": "Цена в валюте продажи с учетом всех скидок, сконвертированная по курсу на момент продажи в российские копейки. Предоставляется в информационных целях."
          },
          "currencyCode": {
            "type": "integer",
            "nullable": false,
            "description": "Код валюты продажи (ISO 4217)"
          },
          "convertedCurrencyCode": {
            "type": "integer",
            "nullable": false,
            "description": "Код валюты страны поставщика (ISO 4217)"
          },
          "orderUid": {
            "type": "string",
            "description": "Идентификатор транзакции для группировки сборочных заданий. Сборочные задания в одной корзине покупателя будут иметь одинаковый orderUID"
          },
          "deliveryType": {
            "type": "string",
            "nullable": false,
            "description": "Тип доставки: fbs - доставка на склад Wildberries, dbs - доставка силами продавца\n",
            "enum": ["dbs", "fbs"]
          },
          "nmId": {
            "type": "integer",
            "nullable": false,
            "description": "Артикул WB"
          },
          "chrtId": {
            "type": "integer",
            "nullable": false,
            "description": "Идентификатор размера товара в системе Wildberries"
          },
          "article": {
            "type": "string",
            "nullable": false,
            "description": "Артикул продавца",
            "example": "one-ring-7548"
          },
          "isLargeCargo": {
            "type": "boolean",
            "nullable": false,
            "description": "сКГТ-признак товара, на который был сделан заказ"
          }
        }
      },
      "SupplyOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": false,
            "description": "Идентификатор сборочного задания в Маркетплейсе",
            "example": 13833711
          },
          "rid": {
            "type": "string",
            "nullable": false,
            "description": "Идентификатор сборочного задания в системе Wildberries",
            "example": "f884001e44e511edb8780242ac120002"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Дата создания сборочного задания (RFC3339)",
            "example": "2022-05-04T07:56:29Z"
          },
          "warehouseId": {
            "type": "integer",
            "nullable": false,
            "description": "Идентификатор склада продавца, на который поступило сборочное задание",
            "example": 658434
          },
          "prioritySc": {
            "type": "array",
            "nullable": false,
            "description": "Массив приоритетных СЦ для доставки сборочного задания. Если поле не заполнено или массив пустой, приоритетного СЦ для данного сборочного задания нет",
            "items": {
              "type": "string"
            }
          },
          "offices": {
            "type": "array",
            "nullable": true,
            "description": "Список офисов, куда следует привезти товар",
            "items": {
              "type": "string",
              "example": "Калуга"
            }
          },
          "user": {
            "type": "object",
            "nullable": true,
            "description": "Информация о покупателе (только для доставки силами продавца)",
            "properties": {
              "fio": {
                "type": "string",
                "nullable": false,
                "description": "ФИО"
              },
              "phone": {
                "type": "string",
                "nullable": false,
                "description": "Номер телефона"
              }
            }
          },
          "skus": {
            "type": "array",
            "nullable": false,
            "description": "Массив баркодов товара",
            "items": {
              "type": "string",
              "example": 6665956397512
            }
          },
          "price": {
            "type": "integer",
            "nullable": false,
            "description": "Цена в валюте продажи с учетом всех скидок, умноженная на 100. Код валюты продажи в поле currencyCode."
          },
          "convertedPrice": {
            "type": "integer",
            "nullable": false,
            "description": "Цена продажи с учетом скидок в копейках, сконвертированная в рубли по курсу на момент создания сборочного задания. Предоставляется в информационных целях"
          },
          "currencyCode": {
            "type": "integer",
            "nullable": false,
            "description": "Код валюты продажи (ISO 4217)"
          },
          "convertedCurrencyCode": {
            "type": "integer",
            "nullable": false,
            "description": "Код валюты страны продавца (ISO 4217)"
          },
          "orderUid": {
            "type": "string",
            "description": "Идентификатор транзакции для группировки сборочных заданий. Сборочные задания в одной корзине покупателя будут иметь одинаковый orderUID"
          },
          "nmId": {
            "type": "integer",
            "nullable": false,
            "description": "ААртикул WB"
          },
          "chrtId": {
            "type": "integer",
            "nullable": false,
            "description": "Идентификатор размера товара в системе Wildberries"
          },
          "article": {
            "type": "string",
            "nullable": false,
            "description": "Артикул продавца",
            "example": "one-ring-7548"
          },
          "isLargeCargo": {
            "type": "boolean",
            "nullable": false,
            "description": "сКГТ-признак товара, на который был сделан заказ"
          }
        }
      },
      "IncomesItem": {
        "type": "object",
        "properties": {
          "incomeId": {
            "type": "integer",
            "description": "Номер поставки"
          },
          "number": {
            "type": "string",
            "maxLength": 40,
            "description": "Номер УПД"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Дата поступления. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время обновления информации в сервисе. Это поле соответствует параметру `dateFrom` в запросе. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "supplierArticle": {
            "type": "string",
            "maxLength": 75,
            "description": "Артикул продавца"
          },
          "techSize": {
            "type": "string",
            "maxLength": 30,
            "description": "Размер товара (пример S, M, L, XL, 42, 42-43)"
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "description": "Бар-код"
          },
          "quantity": {
            "type": "integer",
            "description": "Количество"
          },
          "totalPrice": {
            "type": "number",
            "description": "Цена из УПД"
          },
          "dateClose": {
            "type": "string",
            "format": "date",
            "description": "Дата принятия (закрытия) в WB. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "warehouseName": {
            "type": "string",
            "maxLength": 50,
            "description": "Название склада"
          },
          "nmId": {
            "type": "integer",
            "description": "Артикул WB"
          },
          "status": {
            "type": "string",
            "maxLength": 50,
            "enum": ["Принято"],
            "description": "Текущий статус поставки"
          }
        }
      },
      "TokenIsNotApplicable": {
        "description": "Используемый токен не применим к данным методам.",
        "type": "string",
        "example": "Error ae394f96-e258-432d-af13-a53a3d31f8b0: request rejected, unathorized: token scope not allowed for this API route"
      },
      "StocksItem": {
        "type": "object",
        "properties": {
          "lastChangeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время обновления информации в сервисе. Это поле соответствует параметру `dateFrom` в запросе. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "supplierArticle": {
            "type": "string",
            "maxLength": 75,
            "description": "Артикул продавца"
          },
          "techSize": {
            "type": "string",
            "maxLength": 30,
            "description": "Размер товара (пример S, M, L, XL, 42, 42-43)"
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "description": "Бар-код"
          },
          "quantity": {
            "type": "integer",
            "description": "Количество, доступное для продажи (сколько можно добавить в корзину)"
          },
          "isSupply": {
            "type": "boolean",
            "description": "Договор поставки"
          },
          "isRealization": {
            "type": "boolean",
            "description": "Договор реализации"
          },
          "quantityFull": {
            "type": "integer",
            "description": "Полное (непроданное) количество, которое числится за складом (= `quantity` + в пути)"
          },
          "warehouseName": {
            "type": "string",
            "maxLength": 50,
            "description": "Название склада"
          },
          "nmId": {
            "type": "integer",
            "description": "Артикул WB"
          },
          "subject": {
            "type": "string",
            "maxLength": 50,
            "description": "Предмет"
          },
          "category": {
            "type": "string",
            "maxLength": 50,
            "description": "Категория"
          },
          "daysOnSite": {
            "type": "integer",
            "description": "Количество дней на сайте"
          },
          "brand": {
            "type": "string",
            "maxLength": 50,
            "description": "Бренд"
          },
          "SCCode": {
            "type": "string",
            "maxLength": 50,
            "description": "Код контракта"
          },
          "Price": {
            "type": "number",
            "description": "Цена"
          },
          "Discount": {
            "type": "number",
            "description": "Скидка"
          }
        }
      },
      "OrdersItem": {
        "type": "object",
        "properties": {
          "gNumber": {
            "type": "string",
            "maxLength": 50,
            "description": "Номер заказа. Объединяет все позиции одного заказа."
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время заказа. Это поле соответствует параметру `dateFrom` в запросе, если параметр `flag=1`. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время обновления информации в сервисе. Это поле соответствует параметру `dateFrom` в запросе, если параметр `flag=0` или не указан. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "supplierArticle": {
            "type": "string",
            "maxLength": 75,
            "description": "Артикул продавца"
          },
          "techSize": {
            "type": "string",
            "maxLength": 30,
            "description": "Размер товара (пример S, M, L, XL, 42, 42-43)"
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "description": "Бар-код"
          },
          "totalPrice": {
            "type": "number",
            "description": "Цена до согласованной итоговой скидки/промо/спп. Для получения цены со скидкой можно воспользоваться формулой `priceWithDiscount = totalPrice * (1 - discountPercent/100)`"
          },
          "discountPercent": {
            "type": "integer",
            "description": "Согласованный итоговый дисконт. Будучи примененным к `totalPrice`, даёт сумму к оплате."
          },
          "warehouseName": {
            "type": "string",
            "maxLength": 50,
            "description": "Название склада отгрузки"
          },
          "oblast": {
            "type": "string",
            "maxLength": 200,
            "description": "Область"
          },
          "incomeID": {
            "type": "integer",
            "description": "Номер поставки (от продавца на склад)"
          },
          "odid": {
            "type": "integer",
            "description": "Уникальный идентификатор позиции заказа. Может использоваться для поиска соответствия между заказами и продажами."
          },
          "nmId": {
            "type": "integer",
            "description": "Артикул WB"
          },
          "subject": {
            "type": "string",
            "maxLength": 50,
            "description": "Предмет"
          },
          "category": {
            "type": "string",
            "maxLength": 50,
            "description": "Категория"
          },
          "brand": {
            "type": "string",
            "maxLength": 50,
            "description": "Бренд"
          },
          "isCancel": {
            "type": "boolean",
            "description": "Отмена заказа. true - заказ отменен до оплаты."
          },
          "cancel_dt": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время отмены заказа. Если заказ не был отменен, то `\"0001-01-01T00:00:00\"`. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "sticker": {
            "type": "string",
            "description": "Цифровое значение стикера, который клеится на товар в процессе сборки заказа по системе Маркетплейс."
          },
          "srid": {
            "type": "string",
            "description": "Уникальный идентификатор заказа, функционально аналогичный `odid`/`rid`.  Данный параметр введен в июле'22 и в течение переходного периода может быть заполнен не во всех ответах. Примечание для работающих по системе Маркетплейс: `srid` равен `rid` в ответе на метод `GET /api/v2/orders`.\n"
          }
        }
      },
      "SalesItem": {
        "type": "object",
        "properties": {
          "gNumber": {
            "type": "string",
            "maxLength": 50,
            "description": "Номер заказа. Объединяет все позиции одного заказа."
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время продажи. Это поле соответствует параметру `dateFrom` в запросе, если параметр `flag=1`. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время обновления информации в сервисе. Это поле соответствует параметру `dateFrom` в запросе, если параметр `flag=0` или не указан. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "supplierArticle": {
            "type": "string",
            "maxLength": 75,
            "description": "Артикул продавца"
          },
          "techSize": {
            "type": "string",
            "maxLength": 30,
            "description": "Размер товара (пример S, M, L, XL, 42, 42-43)"
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "description": "Бар-код"
          },
          "totalPrice": {
            "type": "number",
            "description": "Цена до согласованной скидки/промо/спп. Для получения цены со скидкой можно воспользоваться формулой `priceWithDiscount = totalPrice * (1 - discountPercent/100)`"
          },
          "discountPercent": {
            "type": "integer",
            "description": "Согласованный итоговый дисконт"
          },
          "isSupply": {
            "type": "boolean",
            "description": "Договор поставки"
          },
          "isRealization": {
            "type": "boolean",
            "description": "Договор реализации"
          },
          "promoCodeDiscount": {
            "type": "number",
            "description": "Скидка по промокоду"
          },
          "warehouseName": {
            "type": "string",
            "maxLength": 50,
            "description": "Название склада отгрузки"
          },
          "countryName": {
            "type": "string",
            "maxLength": 200,
            "description": "Страна"
          },
          "oblastOkrugName": {
            "type": "string",
            "maxLength": 200,
            "description": "Округ"
          },
          "regionName": {
            "type": "string",
            "maxLength": 200,
            "description": "Регион"
          },
          "incomeID": {
            "type": "integer",
            "description": "Номер поставки (от продавца на склад)"
          },
          "saleID": {
            "type": "string",
            "maxLength": 15,
            "description": "Уникальный идентификатор продажи/возврата. <ul>  <li> `SXXXXXXXXXX` — продажа  <li> `RXXXXXXXXXX` — возврат  <li> `DXXXXXXXXXXX` — доплата <li> `AXXXXXXXXX` – сторно продаж (все значения полей как у продажи, но поля с суммами и кол-вом с минусом как в возврате) <li> `BXXXXXXXXX` - сторно возврата (все значения полей как у возврата, но поля с суммами и кол-вом с плюсом, в противоположность возврату) </ul>\n"
          },
          "odid": {
            "type": "integer",
            "description": "Уникальный идентификатор позиции заказа. Может использоваться для поиска соответствия между заказами и продажами."
          },
          "spp": {
            "type": "number",
            "description": "Согласованная скидка постоянного покупателя"
          },
          "forPay": {
            "type": "number",
            "description": "К перечислению продавцку"
          },
          "finishedPrice": {
            "type": "number",
            "description": "Фактическая цена заказа с учетом всех скидок"
          },
          "priceWithDisc": {
            "type": "number",
            "description": "Цена, от которой считается вознаграждение продавца `forpay` (с учетом всех согласованных скидок)"
          },
          "nmId": {
            "type": "integer",
            "description": "Артикул WB"
          },
          "subject": {
            "type": "string",
            "maxLength": 50,
            "description": "Предмет"
          },
          "category": {
            "type": "string",
            "maxLength": 50,
            "description": "Категория"
          },
          "brand": {
            "type": "string",
            "maxLength": 50,
            "description": "Бренд"
          },
          "isStorno": {
            "type": "integer",
            "description": "Для сторно-операций `1`, для остальных `0`"
          },
          "sticker": {
            "type": "string",
            "description": "Цифровое значение стикера, который клеится на товар в процессе сборки заказа по системе Маркетплейс."
          },
          "srid": {
            "type": "string",
            "description": "Уникальный идентификатор заказа, функционально аналогичный `odid`/`rid`.  Данный параметр введен в июле'22 и в течение переходного периода может быть заполнен не во всех ответах. Примечание для работающих по системе Маркетплейс: `srid` равен `rid` в ответе на метод `GET /api/v2/orders`.\n"
          }
        }
      },
      "DetailReportItem": {
        "type": "object",
        "properties": {
          "realizationreport_id": {
            "example": 1234567,
            "type": "integer",
            "description": "Номер отчёта"
          },
          "date_from": {
            "example": "2022-10-17T00:00:00Z",
            "type": "string",
            "format": "date-time",
            "description": "Дата начала отчётного периода"
          },
          "date_to": {
            "example": "2022-10-23T00:00:00Z",
            "type": "string",
            "format": "date-time",
            "description": "Дата конца отчётного периода"
          },
          "create_dt": {
            "example": "2022-10-24T14:40:32",
            "type": "string",
            "format": "date-time",
            "description": "Дата формирования отчёта"
          },
          "suppliercontract_code": {
            "example": null,
            "type": "object",
            "description": "Договор"
          },
          "rrd_id": {
            "example": 1232610467,
            "type": "integer",
            "description": "Номер строки"
          },
          "gi_id": {
            "example": 123456,
            "type": "integer",
            "description": "Номер поставки"
          },
          "subject_name": {
            "example": "Мини-печи",
            "type": "string",
            "description": "Предмет"
          },
          "nm_id": {
            "example": 1234567,
            "type": "integer",
            "description": "Артикул WB"
          },
          "brand_name": {
            "example": "BlahBlah",
            "type": "string",
            "description": "Бренд"
          },
          "sa_name": {
            "example": "MAB123",
            "type": "string",
            "description": "Артикул продавца"
          },
          "ts_name": {
            "example": "0",
            "type": "string",
            "description": "Размер"
          },
          "barcode": {
            "example": "1231312352310",
            "type": "string",
            "description": "Баркод"
          },
          "doc_type_name": {
            "example": "Продажа",
            "type": "string",
            "description": "Тип документа"
          },
          "quantity": {
            "type": "integer",
            "example": 1,
            "description": "Количество"
          },
          "retail_price": {
            "example": 1249,
            "type": "number",
            "description": "Цена розничная"
          },
          "retail_amount": {
            "example": 367,
            "type": "number",
            "description": "Сумма продаж (возвратов)"
          },
          "sale_percent": {
            "example": 68,
            "type": "integer",
            "description": "Согласованная скидка"
          },
          "commission_percent": {
            "example": 0.1324,
            "type": "number",
            "description": "Процент комиссии"
          },
          "office_name": {
            "example": "Коледино",
            "type": "string",
            "description": "Склад"
          },
          "supplier_oper_name": {
            "example": "Продажа",
            "type": "string",
            "description": "Обоснование для оплаты"
          },
          "order_dt": {
            "example": "2022-10-13T00:00:00Z",
            "type": "string",
            "format": "date-time",
            "description": "Дата заказа. <br> Присылается с явным указанием часового пояса"
          },
          "sale_dt": {
            "example": "2022-10-20T00:00:00Z",
            "type": "string",
            "format": "date-time",
            "description": "Дата продажи. <br> Присылается с явным указанием часового пояса"
          },
          "rr_dt": {
            "example": "2022-10-20T00:00:00Z",
            "type": "string",
            "format": "date-time",
            "description": "Дата операции. <br> Присылается с явным указанием часового пояса"
          },
          "shk_id": {
            "example": 1239159661,
            "type": "integer",
            "description": "Штрих-код"
          },
          "retail_price_withdisc_rub": {
            "example": 399.68,
            "type": "number",
            "description": "Цена розничная с учетом согласованной скидки"
          },
          "delivery_amount": {
            "example": 0,
            "type": "integer",
            "description": "Количество доставок"
          },
          "return_amount": {
            "example": 0,
            "type": "integer",
            "description": "Количество возвратов"
          },
          "delivery_rub": {
            "example": 0,
            "type": "number",
            "description": "Стоимость логистики"
          },
          "gi_box_type_name": {
            "example": "Монопалета",
            "type": "string",
            "description": "Тип коробов"
          },
          "product_discount_for_report": {
            "example": 399.68,
            "type": "number",
            "description": "Согласованный продуктовый дисконт"
          },
          "supplier_promo": {
            "example": 0,
            "type": "number",
            "description": "Промокод"
          },
          "rid": {
            "example": 123722249253,
            "type": "integer",
            "description": "Уникальный идентификатор заказа"
          },
          "ppvz_spp_prc": {
            "example": 0.1581,
            "type": "number",
            "description": "Скидка постоянного покупателя"
          },
          "ppvz_kvw_prc_base": {
            "example": 0.15,
            "type": "number",
            "description": "Размер кВВ без НДС, % базовый"
          },
          "ppvz_kvw_prc": {
            "example": -0.0081,
            "type": "number",
            "description": "Итоговый кВВ без НДС, %"
          },
          "sup_rating_prc_up": {
            "type": "number",
            "description": "Размер снижения кВВ из-за рейтинга, % <span class=\"new\">new</span>"
          },
          "is_kgvp_v2": {
            "type": "number",
            "description": "Размер снижения кВВ из-за акции, % <span class=\"new\">new</span>"
          },
          "ppvz_sales_commission": {
            "example": -3.74,
            "type": "number",
            "description": "Вознаграждение с продаж до вычета услуг поверенного, без НДС"
          },
          "ppvz_for_pay": {
            "example": 376.99,
            "type": "number",
            "description": "К перечислению продавцу за реализованный товар"
          },
          "ppvz_reward": {
            "example": 0,
            "type": "number",
            "description": "Возмещение за выдачу и возврат товаров на ПВЗ"
          },
          "acquiring_fee": {
            "example": 14.89,
            "type": "number",
            "description": "Возмещение издержек по эквайрингу. <br> Издержки WB за услуги эквайринга: вычитаются из вознаграждения WB и не влияют на доход продавца.\n"
          },
          "acquiring_bank": {
            "example": "Тинькофф",
            "type": "string",
            "description": "Наименование банка-эквайера"
          },
          "ppvz_vw": {
            "example": -3.74,
            "type": "number",
            "description": "Вознаграждение WB без НДС"
          },
          "ppvz_vw_nds": {
            "example": -0.75,
            "type": "number",
            "description": "НДС с вознаграждения WB"
          },
          "ppvz_office_id": {
            "example": 105383,
            "type": "integer",
            "description": "Номер офиса"
          },
          "ppvz_office_name": {
            "example": "Пункт самовывоза (ПВЗ)",
            "type": "string",
            "description": "Наименование офиса доставки"
          },
          "ppvz_supplier_id": {
            "example": 186465,
            "type": "integer",
            "description": "Номер партнера"
          },
          "ppvz_supplier_name": {
            "example": "ИП Жасмин",
            "type": "string",
            "description": "Партнер"
          },
          "ppvz_inn": {
            "example": "010101010101",
            "type": "string",
            "description": "ИНН партнера"
          },
          "declaration_number": {
            "example": "",
            "type": "string",
            "description": "Номер таможенной декларации"
          },
          "bonus_type_name": {
            "example": "Штраф МП. Невыполненный заказ (отмена клиентом после недовоза)",
            "type": "string",
            "description": "Обоснование штрафов и доплат. <br> Поле будет в ответе при наличии значения\n"
          },
          "sticker_id": {
            "example": "1964038895",
            "type": "string",
            "description": "Цифровое значение стикера, который клеится на товар в процессе сборки заказа по схеме \"Маркетплейс\""
          },
          "site_country": {
            "example": "RU",
            "type": "string",
            "description": "Страна продажи"
          },
          "penalty": {
            "example": 231.35,
            "type": "number",
            "description": "Штрафы"
          },
          "additional_payment": {
            "example": 0,
            "type": "number",
            "description": "Доплаты"
          },
          "rebill_logistic_cost": {
            "example": 1.349,
            "type": "number",
            "description": "Возмещение издержек по перевозке. <span class=\"new\">new</span><br> Поле будет в ответе при наличии значения\n"
          },
          "rebill_logistic_org": {
            "example": "ИП Иванов Иван Иванович(123456789012)",
            "type": "string",
            "description": "Организатор перевозки. <span class=\"new\">new</span><br> Поле будет в ответе при наличии значения.          \n"
          },
          "kiz": {
            "example": "0102900000376311210G2CIS?ehge)S\u001d91002A\u001d92F9Qof4FDo/31Icm14kmtuVYQzLypxm3HWkC1vQ/+pVVjm1dNAth1laFMoAGn7yEMWlTjxIe7lQnJqZ7TRZhlHQ==",
            "type": "string",
            "description": "Код маркировки. <br> Поле будет в ответе при наличии значения\n"
          },
          "srid": {
            "example": "711ab8cb94e040f98b3804e5f331bf7a_r",
            "type": "string",
            "description": "Уникальный идентификатор заказа. Примечание для использующих API Marketplace: `srid` равен `rid` в ответах методов сборочных заданий.\n"
          }
        }
      },
      "StatusNoChange": {
        "type": "string",
        "example": "Статус кампании не изменен"
      },
      "IncorrectSupplierId": {
        "type": "string",
        "example": "Некорректный идентификатор продавца"
      },
      "InvalidRcId": {
        "type": "string",
        "example": "Некорректный идентификатор РК"
      },
      "IncorrectParam": {
        "type": "string",
        "example": "Некорректное значение параметра param"
      },
      "IncorrectActive": {
        "type": "string",
        "example": "Некорректное значение параметра active"
      },
      "IncorrectSubjectID": {
        "type": "string",
        "example": "Некорректное значение параметра subjectId"
      },
      "IncorrectType": {
        "type": "string",
        "example": "Некорректное значение параметра type"
      },
      "IncorrectStatus": {
        "type": "string",
        "example": "Некорректное значение параметра status"
      },
      "IncorrectName": {
        "type": "string",
        "example": "Некорректное название"
      },
      "IncorrectNumDisplayIntervals": {
        "type": "string",
        "example": "Некорректное количество интервалов показов (max. 24)"
      },
      "IncorrectDisplayInterval": {
        "type": "string",
        "example": "Некорректные значения интервалов показов"
      },
      "IncorrectNumItems": {
        "type": "string",
        "example": "Некорректное количество номенклатур в запросе (max. 50)"
      },
      "IncorrectNm": {
        "type": "string",
        "example": "Некорректное значение параметра nm"
      },
      "IncorrectCpm": {
        "type": "string",
        "example": "Некорректное значение параметра cpm"
      },
      "AmountNotChanged": {
        "type": "string",
        "example": "Размер ставки не изменен"
      },
      "CampaignIntervalsNotChanged": {
        "type": "string",
        "example": "Интервалы показов кампании не изменены"
      },
      "ActivityNomNotChanged": {
        "type": "string",
        "example": "Активность номенклатур(-ы) не изменена"
      },
      "ActivitySubjectGroupNotChanged": {
        "type": "string",
        "example": "Активность предметной группы не изменена"
      },
      "CompanyNameChangeErr": {
        "type": "string",
        "example": "Ошибка изменения названия кампании"
      },
      "DisplayIntervalError": {
        "type": "string",
        "example": "Ошибка изменения интервалов показа"
      },
      "ErrorProcesRequestParam": {
        "type": "string",
        "example": "Ошибка обработки параметров запроса"
      },
      "RequestBodyProcessError": {
        "type": "string",
        "example": "Ошибка обработки тела запроса"
      },
      "feedbackErr400": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "type": "boolean",
            "description": "Есть ли ошибка",
            "example": true
          },
          "errorText": {
            "type": "string",
            "description": "Описание ошибки",
            "example": "Something went wrong"
          },
          "additionalErrors": {
            "example": null
          }
        }
      },
      "feedbackErr403": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "type": "boolean",
            "description": "Есть ли ошибка",
            "example": true
          },
          "errorText": {
            "type": "string",
            "description": "Описание авторизации",
            "example": "Ошибка авторизации"
          },
          "additionalErrors": {
            "example": null
          }
        }
      },
      "feedbackErr404": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "type": "boolean",
            "description": "Есть ли ошибка",
            "example": true
          },
          "errorText": {
            "type": "string",
            "description": "Описание авторизации",
            "example": "Не найден отзыв id"
          },
          "additionalErrors": {
            "example": null
          }
        }
      },
      "productRating": {
        "type": "object",
        "properties": {
          "nmId": {
            "type": "integer",
            "description": "Артикул WB"
          },
          "imtId": {
            "type": "integer",
            "description": "Идентификатор карточки товара"
          },
          "valuationsSum": {
            "type": "integer",
            "description": "Сумма оценок"
          },
          "feedbacksCount": {
            "type": "integer",
            "description": "Количество отзывов"
          },
          "valuation": {
            "type": "number",
            "description": "Средняя оценка"
          },
          "productName": {
            "type": "string",
            "nullable": true,
            "description": "Название товара"
          },
          "supplierArticle": {
            "type": "string",
            "description": "Артикул продавца"
          },
          "brandName": {
            "type": "string",
            "description": "Бренд товара"
          }
        }
      },
      "responseFeadback": {
        "description": "Массив структур отзывов",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Id отзыва"
            },
            "userName": {
              "type": "string",
              "description": "Имя автора отзыва"
            },
            "matchingSize": {
              "type": "string",
              "description": "<dl> <dt>\n  Соответствие заявленного размера реальному. <span class=\"new\">new</span>\n  <br>Возможные значения:\n</dt> <dd>\"\" - для безразмерных товаров,</dd> <dd>\"ок\" - соответствует размеру,</dd> <dd>\"smaller\" - маломерит,</dd> <dd>\"bigger\" - большемерит</dd>               </dl>                      \n"
            },
            "text": {
              "type": "string",
              "description": "Текст отзыва"
            },
            "productValuation": {
              "type": "integer",
              "description": "Оценка товара"
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время создания отзыва"
            },
            "updatedDate": {
              "type": "string",
              "format": "date-time",
              "description": "Дата и время обновления отзыва"
            },
            "state": {
              "type": "string",
              "description": "<dt>Статус вопроса:</dt> <dd>`none` - не обработан (новый)</dd> <dd>`wbRu` - обработан</dd> <dd>`deleted` - удален</dd>\n"
            },
            "answer": {
              "type": "object",
              "description": "Структура ответа",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Текст ответа"
                },
                "state": {
                  "type": "string",
                  "description": "<dt>Статус:</dt> <dd>`none` - новый</dd> <dd>`wbRu` - отображается на сайте</dd> <dd>`reviewRequired` - ответ проходит проверку</dd> <dd>`rejected` - ответ отклонён</dd>\n"
                }
              }
            },
            "productDetails": {
              "description": "Структура товара",
              "type": "object",
              "properties": {
                "nmId": {
                  "type": "integer",
                  "description": "Артикул WB"
                },
                "imtId": {
                  "type": "integer",
                  "description": "Идентификатор карточки товара"
                },
                "productName": {
                  "type": "string",
                  "description": "Название товара"
                },
                "supplierArticle": {
                  "type": "string",
                  "nullable": true,
                  "description": "Артикул продавца"
                },
                "supplierName": {
                  "type": "string",
                  "nullable": true,
                  "description": "Имя продавца"
                },
                "brandName": {
                  "type": "string",
                  "nullable": true,
                  "description": "Бренд товара"
                },
                "size": {
                  "type": "string",
                  "description": "Размер товара (`techSize` в КТ)"
                }
              }
            },
            "photoLinks": {
              "description": "Массив структур фотографий",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fullSize": {
                    "type": "string",
                    "description": "Адрес фотографии полного размера"
                  },
                  "miniSize": {
                    "type": "string",
                    "description": "Адрес фотографии маленького размера"
                  }
                }
              }
            },
            "video": {
              "description": "Структура видео",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Адрес видео"
                },
                "thumbnailUri": {
                  "type": "string",
                  "description": "Адрес изображений"
                }
              }
            },
            "wasViewed": {
              "type": "boolean",
              "description": "Просмотрен ли отзыв"
            },
            "isCreationSupplierComplaint": {
              "type": "boolean",
              "description": "Можно ли оставить жалобу (`true` - да, `false` - нет) <br> Жалобу можно оставить, если с момента создания отзыва прошло менее 30 дней.\n"
            },
            "supplierComplaint": {
              "description": "Жалоба на отзыв",
              "type": "object",
              "properties": {
                "creationDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Дата и время обращения(жалобы) продавца"
                },
                "state": {
                  "type": "string",
                  "nullable": true,
                  "description": "<dt>Статус обращения:</dt> <dd>`none` - обращение не рассмотрено</dd> <dd>`approved` - обращение одобрено</dd> <dd>`rejected` - обращение отклонено</dd>\n"
                },
                "answerForSupplier": {
                  "type": "string",
                  "nullable": true,
                  "description": "Текст ответа для продавца"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "quantity": {
        "in": "query",
        "name": "quantity",
        "description": "`1` - товар с ненулевым остатком, `0` - товар с любым остатком",
        "schema": {
          "type": "integer",
          "enum": [0, 1]
        }
      },
      "activateFrom": {
        "description": "Дата активации скидки в формате `YYYY-MM-DD` или `YYYY-MM-DD HH:MM:SS`. Если не указывать, скидка начнет действовать сразу.",
        "in": "query",
        "name": "activateFrom",
        "schema": {
          "type": "string"
        }
      },
      "Warehouse": {
        "name": "warehouse",
        "in": "path",
        "required": true,
        "description": "Идентификатор склада продавца",
        "schema": {
          "type": "integer",
          "example": 1234
        }
      },
      "Supply": {
        "name": "supply",
        "in": "path",
        "required": true,
        "description": "Идентификатор поставки",
        "schema": {
          "type": "string",
          "example": "WB-GI-1234567"
        }
      },
      "Order": {
        "name": "order",
        "in": "path",
        "required": true,
        "description": "Идентификатор сборочного задания",
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 5632423
        }
      },
      "Next": {
        "name": "next",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        },
        "description": "Параметр пагинации. Устанавливает значение, с которого надо получить следующий пакет данных. Для получения полного списка данных должен быть равен 0 в первом запросе. Для следующих запросов необходимо брать значения из одноимённого поля в ответе."
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000
        },
        "description": "Параметр пагинации. Устанавливает предельное количество возвращаемых данных."
      },
      "dateFrom": {
        "in": "query",
        "name": "dateFrom",
        "schema": {
          "type": "string",
          "format": "RFC3339"
        },
        "required": true,
        "description": "Дата в формате RFC3339. Можно передать дату или дату со временем.  Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает, что время передается в UTC-часовом поясе.  При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br>Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul>\n"
      },
      "flag": {
        "in": "query",
        "name": "flag",
        "schema": {
          "type": "integer",
          "default": 0
        },
        "required": false,
        "description": "Если параметр `flag=0` (или не указан в строке запроса), при вызове API возвращаются данные,  у которых значение поля `lastChangeDate` (дата время обновления информации в сервисе) больше или равно переданному  значению параметра `dateFrom`.  При этом количество возвращенных строк данных варьируется в интервале от 0 до примерно 100 000. <br> Если параметр `flag=1`, то будет выгружена информация обо всех заказах или продажах с датой,  равной переданному параметру `dateFrom` (в данном случае время в дате значения не имеет).  При этом количество возвращенных строк данных будет равно количеству всех заказов или продаж,  сделанных в указанную дату, переданную в параметре `dateFrom`.\n"
      }
    },
    "requestBodies": {
      "NomenclatureArray": {
        "description": "Перечень номенклатур",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "discount": {
                    "type": "integer",
                    "description": "Размер скидки",
                    "example": 15
                  },
                  "nm": {
                    "type": "integer",
                    "description": "Артикул WB",
                    "example": 1234567
                  }
                }
              }
            }
          }
        },
        "required": true
      },
      "NomenclatureArray2": {
        "description": "Перечень номенклатур",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "promoCode": {
                    "type": "integer",
                    "description": "Промокод",
                    "example": 15
                  },
                  "nm": {
                    "type": "integer",
                    "description": "Артикул WB",
                    "example": 1234567
                  }
                }
              }
            }
          }
        },
        "required": true
      }
    },
    "examples": {
      "IncorrectRequestBody": {
        "value": {
          "code": "IncorrectRequestBody",
          "message": "Некорректное тело запроса"
        }
      },
      "IncorrectRequest": {
        "value": {
          "code": "IncorrectRequest",
          "message": "Переданы некорректные данные"
        }
      },
      "IncorrectParameter": {
        "value": {
          "code": "IncorrectParameter",
          "message": "Передан некорректный параметр"
        }
      },
      "SupplyHasOrders": {
        "value": {
          "code": "SupplyHasOrders",
          "message": "Не удалось обработать поставку. Убедитесь, что за ней не осталось закреплённых сборочных заданий."
        }
      },
      "SupplyHasZeroOrders": {
        "value": {
          "code": "SupplyHasZeroOrders",
          "message": "Не удалось обработать поставку. Убедитесь, что за ней закреплён хотя бы одно сборочное задание."
        }
      },
      "SupplyNotClosed": {
        "value": {
          "code": "SupplyNotClosed",
          "message": "Поставка не передана в доставку"
        }
      },
      "FailedToAddSupplyOrder": {
        "value": {
          "code": "FailedToAddSupplyOrder",
          "message": "Не удалось закрепить сборочное задание за поставкой. Убедитесь, что сборочное задание и поставка удовлетворяют всем необходимым требованиям."
        }
      },
      "StatusMismatch": {
        "value": {
          "code": "StatusMismatch",
          "message": "Несоответствие статусов, проверьте их правильность"
        }
      },
      "StatusChangeNotAllowed": {
        "value": {
          "code": "StatusChangeNotAllowed",
          "message": "Задание перейдёт в завершенные после сканирования на ПВЗ"
        }
      },
      "SgtinNotRequired": {
        "value": {
          "code": "SgtinNotRequired",
          "message": "Для данной продукции КиЗ не требуется"
        }
      },
      "MaxCountSGTIN": {
        "value": {
          "code": "MaxCountSGTIN",
          "message": "Превышено максимальное количество КИЗов для сборочного задания"
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "Запрашиваемый ресурс не найден",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "NotFound",
              "message": "Не найдено"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Пользователь не авторизован",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TokenMissing"
                },
                {
                  "$ref": "#/components/schemas/TokenInvalid"
                },
                {
                  "$ref": "#/components/schemas/TokenNotFound"
                }
              ]
            }
          }
        }
      },
      "ExceededLimitRequests": {
        "description": "Превышен лимит по запросам"
      },
      "AccessDenied": {
        "description": "Доступ запрещён",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "AccessDenied",
              "message": "Доступ запрещён"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Внутренняя ошибка сервиса",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "InternalServerError",
              "message": "Внутренняя ошибка сервиса"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Цены"
    },
    {
      "name": "Промокоды и скидки"
    },
    {
      "name": "Контент / Загрузка",
      "description": "Создание и редактирование КТ <dl> <dt>Словарь сокращений:</dt> <dd>КТ - карточка товара</dd> <dd>НМ - номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>\n<br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> `Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен`.\n"
    },
    {
      "name": "Контент / Просмотр",
      "description": "Получение информации о созданных КТ, НМ и размерах <dl> <dt>Словарь сокращений:</dt> <dd>КТ - карточка товара</dd> <dd>НМ - номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>\n"
    },
    {
      "name": "Контент / Конфигуратор",
      "description": "Конфигуратор <dl> <dt>Словарь сокращений:</dt> <dd>КТ - карточка товара</dd> <dd>НМ - номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>\n"
    },
    {
      "name": "Контент / Медиафайлы",
      "description": "Работа с медиафайлами <dl> <dt>Словарь сокращений:</dt> <dd>КТ - карточка товара</dd> <dd>НМ - номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>\n"
    },
    {
      "name": "Контент / Теги",
      "description": "Сервис для работы с тегами КТ. Теги предназначены для быстрого поиска КТ в вашем лк.\n"
    },
    {
      "name": "Контент / Корзина"
    },
    {
      "name": "Marketplace / Сборочные задания",
      "description": "Публичное API Marketplace создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br>Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <br>Ограничения по запросам: <br>Метод <b>PATCH</b> `api/v3/supplies/{supply}/orders/{order}` \"Добавить сборочное задание к поставке\" - 1 000 запросов в минуту. <br>Остальные методы - 300 запросов в минуту, в целом. <br>`Не допускается использование API Marketplace в качестве внешней базы данных.`\n<dl> <dt>Словарь сокращений:</dt> <dd>ПВЗ - пункт выдачи заказов</dd> <dd>КИЗ - контрольный идентификационный знак</dd> <dd>ИС \"МДЛП\" - информационная система мониторинга движения лекарственных препаратов</dd> <dd>СЦ - сортировочный центр</dd> </dl>\n\n  **Порядок работы**:\n\n  1. Создайте новую поставку с помощью метода **POST** */api/v3/supplies.* В ответ вернется идентификатор созданной поставки в формате \"WB-GI-1234567\".\n  2. В текущую новую поставку нужно добавить сборочные задания, которые вы повезёте на склад, методом **PATCH** */api/v3/supplies/{id поставки}/orders/{id сборочного задания}*. Обратите внимание, что при добавлении сборочных заданий к поставке они будут переведены в статус **confirm** (\"На сборке\").\n  3. После добавления сборочных заданий к поставке вы можете получить этикетки с помощью метода **POST** */api/v3/orders/stickers*. Обратите внимание, что этикетки для сборочных заданий можно получить только тогда, когда они в статусе **confirm** (\"На сборке\").\n  4. После того как поставка будет упомплектована нужными сборочными заданиями, необходимо ее передать в доставку с помощью метода **PATCH** */api/v3/supplies/{id поставки}/deliver*. Обратите внимание, что при передаче сборочных заданий в доставку они будут автоматически собраны, т.е. переведены в статус **complete** (\"В доставке\").\n  5. Список сборочных заданий, добавленных к поставке, можно получить методом **GET** */api/v3/supplies/{id поставки}/orders*.\n  6. Все поставки, имеющиеся у продавца, можно получить методом **GET** */api/v3/supplies*.\n  7. Детализацию конкретной поставки можно получить методом **GET** */api/v3/supplies/{id поставки}*.\n  8. С помощью метода **DELETE** */api/v3/supplies/{id поставки}* можно удалить поставку при условии, что она активна и за ней не закреплено ни одно сборочное задание.\n  9. Метод **PATCH** */api/v3/supplies/{id поставки}/orders/{id сборочного задания}* также позволяет перемещать сборочные задания между активными поставками. Обратите внимание, что нельзя перемещать сборочное задание из уже закрытой поставки, только если оно не требует повторной отгрузки.\n  10. QR-код поставки можно получить методом **GET** */api/v3/supplies/{id поставки}/barcode* в формате svg, zpl или png. Доступно только после передачи поставки в доставку.\n\nОписание основных ошибок в Marketplace: <table>\n  <tr>\n    <td>Код</td>\n    <td>Описание</td>\n  </tr>\n  <tr>\n    <td>InternalServerError</td>\n    <td>Внутренняя ошибка сервера</td>\n  </tr>\n  <tr>\n    <td>Unauthorized</td>\n    <td>Пользователь не авторизован</td>\n  </tr>\n  <tr>\n    <td>AccessDenied</td>\n    <td>Доступ запрещён</td>\n  </tr>\n  <tr>\n    <td>IncorrectRequestBody</td>\n    <td>Некорректное тело запроса</td>\n  </tr>\n  <tr>\n    <td>IncorrectRequest</td>\n    <td>Переданы некорректные данные</td>\n  </tr>\n  <tr>\n    <td>NotFound</td>\n    <td>Не найдено</td>\n  </tr>\n  <tr>\n    <td>UploadDataLimit</td>\n    <td>Превышен лимит загружаемых данных</td>\n  </tr>\n  <tr>\n    <td>SubjectDBSRestriction</td>\n    <td>Категория товара недоступна для продажи по схеме 'Везу на склад Wildberries'</td>\n  </tr>\n  <tr>\n    <td>SubjectFBSRestriction</td>\n    <td>Категория товара недоступна для продажи по схеме 'Везу самостоятельно до покупателя'</td>\n  </tr>\n  <tr>\n    <td>CargoWarehouseRestriction</td>\n    <td>Выбранный склад не предназначен для крупногабаритных товаров. Добавьте их на соответствующий склад</td>\n  </tr>\n  <tr>\n    <td>IncorrectParameter</td>\n    <td>Передан некорректный параметр</td>\n  </tr>\n  <tr>\n    <td>SupplyHasOrders</td>\n    <td>Не удалось обработать поставку. Убедитесь, что за ней не осталось закреплённых сборочных заданий</td>\n  </tr>\n  <tr>\n    <td>SupplyHasZeroOrders</td>\n    <td>Не удалось обработать поставку. Убедитесь, что за ней закреплено хотя бы одно сборочное задание</td>\n  </tr>\n  <tr>\n    <td>FailedToAddSupplyOrder</td>\n    <td>Не удалось закрепить сборочное задание за поставкой. Убедитесь, что сборочное задание и поставка удовлетворяют всем необходимым требованиям</td>\n  </tr>\n  <tr>\n    <td>StatusChangeNotAllowed</td>\n    <td>Задание перейдёт в завершенные после сканирования на ПВЗ</td>\n  </tr>\n  <tr>\n    <td>StatusMismatch</td>\n    <td>Несоответствие статусов, проверьте их правильность</td>\n  </tr>\n  <tr>\n    <td>SgtinNotRequired</td>\n    <td>Для данной продукции КиЗ не требуется</td>\n  </tr>\n  <tr>\n    <td>SupplyNotClosed</td>\n    <td>Поставка не передана в доставку</td>\n  </tr>\n  <tr>\n    <td>IncorrectSGTIN</td>\n    <td>Передан некорректный КИЗ</td>\n  </tr>\n  <tr>\n    <td>MaxCountSGTIN</td>\n    <td>Превышено максимальное количество КИЗов для сборочного задания</td>\n  </tr>\n</table>\n"
    },
    {
      "name": "Marketplace / Остатки",
      "description": "Допускается <b>максимум 300 запросов в минуту</b> на методы Marketplace в целом"
    },
    {
      "name": "Статистика",
      "description": "Методы статистики <br><b>Лимит по запросам:</b> один запрос одного метода в минуту. <br><br> <a href=\"./excel/stat-excel.html\">Инструкция: Сохранение статистики в Excel</a>\n"
    },
    {
      "name": "Статистика / Тестовый контур",
      "description": "Для настройки интеграции Вы можете воспользоваться тестовым контуром сервиса статистики.<br> Авторизация осуществляется по токену типа `Статистика`, см. раздел [Авторизация](index.html#section/Obshee-opisanie/Avtorizaciya).<br> Для параметров <code>dateFrom</code> и <code>dateTo</code> доступен диапазон 4 месяца назад от текущей даты.<br> Для доступа к тестовому контуру вместо адреса `https://statistics-api.wildberries.ru` используйте `https://statistics-api-sandbox.wildberries.ru` или `https://statistics-api-sandbox.wb.ru`. <br> <br> Данные в тестовом контуре сгенерированы случайным образом и не пренадлежат реальным продавцам.<br>  Использование тестового контура не несёт риска непреднамеренного раскрытия информации."
    },
    {
      "name": "Реклама",
      "description": "<dl> <dt>Словарь сокращений:</dt> <dd>РК - рекламная кампания</dd> </dl>\nСинхронизация данных из бд происходит раз в 3 минуты.  <br>Изменение статуса происходит раз в 1 минуту. Внутри этого интервала будет сохранено последнее действие по изменению статуса. <br>Изменение ставки происходит раз в 30 секунд. Внутри этого интервала будет сохранено последнее действие по изменению ставки.\n"
    },
    {
      "name": "Рекомендации",
      "description": "Взаимодействие с сервисом для формирования выдачи карусели \"с этим товаром рекомендуют\" в карточке товара и дополнения карусели продавцами на портале продавцов."
    }
  ],
  "paths": {
    "/public/api/v1/info": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "description": "Получение информации по номенклатурам, их ценам, скидкам и промокодам. Если не указывать фильтры, вернётся весь товар.",
        "summary": "Получение информации о ценах.",
        "tags": ["Цены"],
        "parameters": [
          {
            "$ref": "#/components/parameters/quantity"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ценах",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nmId": {
                      "type": "integer",
                      "description": "Артикул WB",
                      "example": 1234567
                    },
                    "price": {
                      "type": "number",
                      "description": "Цена",
                      "example": 1000
                    },
                    "discount": {
                      "type": "integer",
                      "description": "Скидка",
                      "example": 10
                    },
                    "promoCode": {
                      "type": "number",
                      "description": "Промокод",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/public/api/v1/prices": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Загрузка цен",
        "description": "Загрузка цен. За раз можно загрузить не более 1000 номенклатур.",
        "tags": ["Цены"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "nmId": {
                      "type": "integer",
                      "description": "Номенклатура",
                      "example": 1234567
                    },
                    "price": {
                      "type": "number",
                      "description": "Цена (указывать без копеек)",
                      "example": 1000
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Цены успешно отправлены."
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/public/api/v1/updateDiscounts": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "description": "Установка скидок для номенклатур. Максимальное количество номенклатур на запрос - 1000",
        "summary": "Установка скидок",
        "tags": ["Промокоды и скидки"],
        "parameters": [
          {
            "$ref": "#/components/parameters/activateFrom"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/NomenclatureArray"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/public/api/v1/revokeDiscounts": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Промокоды и скидки"],
        "description": "Сброс скидок для номенклатур. При первом запросе ответ будет пустым. При повторной попытке сбросить скидку вернет JSON с id первичного запроса.",
        "summary": "Сброс скидок для номенклатур",
        "requestBody": {
          "required": true,
          "description": "Перечень номенклатур к отмене скидок",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "example": [12345678, 81234567]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uploadId": {
                      "type": "integer",
                      "description": "Номер запроса на сброс скидки"
                    },
                    "alreadyExists": {
                      "type": "boolean",
                      "description": "Данное поле обозначает что скидка уже была сброшена"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/public/api/v1/updatePromocodes": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Промокоды и скидки"],
        "description": "Установка промокодов для номенклатур. Максимальное количество номенклатур на запрос - 1000",
        "summary": "Установка промокодов для номенклатур",
        "parameters": [
          {
            "description": "Дата активации промокада в формате `YYYY-MM-DD` или `YYYY-MM-DD HH:MM:SS`. Если не указывать, промокод начнет действовать сразу",
            "in": "query",
            "name": "activateFrom",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/NomenclatureArray2"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/public/api/v1/revokePromocodes": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Промокоды и скидки"],
        "description": "Сброс промокодов для номенклатур",
        "summary": "Сброс промокодов для номенклатур",
        "requestBody": {
          "required": true,
          "description": "Перечень номенклатур к отмене промокодов",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "example": [12345678, 81234567]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/update": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Редактирование КТ",
        "description": "Метод позволяет отредактировать несколько карточек за раз. <br> Редактирование КТ происходит асинхронно, после отправки запрос становится в очередь на обработку. <br> `Важно`: Баркоды (skus) не подлежат удалению или замене. Попытка заменить существующий баркод приведет к добавлению нового баркода к существующему. <br> Если запрос прошел успешно, а информация в карточке не обновилась, значит были допущены ошибки и карточка попала в \"Черновики\" (метод `cards/error/list`) с описанием ошибок. <br>Необходимо исправить ошибки в запросе и отправить его повторно. <br> <br> Для успешного обновления карточки рекомендуем Вам придерживаться следующего порядка действий: <br> 1. Сначала существующую карточку необходимо запросить методом cards/filter. <br> 2. Забираем из ответа массив data. <br> 3. В этом массиве вносим необходимые изменения и отправляем его в cards/update <br> <br>За раз можно отредактировать 1000 КТ по 5 НМ в каждой. <br> <br> `Важно`: Изменение цен данным методом невозможно, используйте метод Загрузка цен, раздел документации Цены.\n",
        "tags": ["Контент / Загрузка"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "nmID",
                    "vendorCode",
                    "sizes",
                    "characteristics"
                  ],
                  "properties": {
                    "imtID": {
                      "description": "Идентификатор карточки товара",
                      "type": "integer",
                      "example": 85792498
                    },
                    "nmID": {
                      "description": "Артикул WB",
                      "type": "integer",
                      "example": 66964219
                    },
                    "vendorCode": {
                      "description": "Артикул продавца",
                      "type": "string",
                      "example": "6000000001"
                    },
                    "sizes": {
                      "description": "Массив размеров для номенклатуры (для безразмерного товара все равно нужно передавать данный массив без параметров (`wbSize` и `techSize`), но с `chrtID` и баркодом)",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["chrtID", "skus"],
                        "properties": {
                          "techSize": {
                            "description": "Размер товара (пример S, M, L, XL, 42, 42-43)",
                            "type": "string",
                            "example": "40-41"
                          },
                          "chrtID": {
                            "description": "Числовой идентификатор размера для данной номенклатуры Wildberries",
                            "type": "integer",
                            "example": 116108635
                          },
                          "wbSize": {
                            "description": "Российский размер товара",
                            "type": "string",
                            "example": "40-41"
                          },
                          "skus": {
                            "description": "Массив баркодов, строковых идентификаторов размеров товара (их можно сгенерировать с помощью API, см. раздел \"Контент / Просмотр\")",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "1000000001"
                            }
                          }
                        }
                      }
                    },
                    "characteristics": {
                      "description": "Массив характеристик, индивидуальный для каждой категории",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ТНВЭД": ["6403993600"]
                        },
                        {
                          "Пол": ["Мужской"]
                        },
                        {
                          "Цвет": ["зеленый"]
                        },
                        {
                          "Предмет": ["Блузки"]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/upload": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Создание  КТ",
        "description": "Создание карточки товара происходит асинхронно, при отправке запроса на создание КТ ваш запрос становится в очередь на создание КТ. <br>`ПРИМЕЧАНИЕ`: Карточка товара считается `созданной`, если успешно создалась хотя бы одна `НМ`. <br>`ВАЖНО`: Если во время обработки запроса в очереди выявляются ошибки, то НМ считается ошибочной. <br>Если запрос на создание прошел успешно, а карточка не создалась, то необходимо в первую очередь проверить наличие карточки в методе `cards/error/list`. Если карточка попала в ответ к этому методу, то необходимо исправить описанные ошибки в запросе на создание карточки и отправить его повторно. <br>За раз можно создать 1000 КТ по 5 НМ в каждой.  <br>Если Вам требуется больше 5 НМ в КТ, то после создания карточки Вы можете добавить их методом \"Добавление НМ к КТ\".\n",
        "tags": ["Контент / Загрузка"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/creatingOneCard"
                  },
                  {
                    "$ref": "#/components/schemas/creatingMergedCards"
                  },
                  {
                    "$ref": "#/components/schemas/creatingGroupOfIndividualCards"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/upload/add": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Добавление НМ к КТ",
        "description": "Метод позволяет добавить к карточке товара новую номенклатуру. <br>Добавление НМ к КТ происходит асинхронно, после отправки запрос становится в очередь на обработку. <br>`Важно`: Если после успешной отправки запроса номенклатура не создалась, то необходимо проверить раздел \"Список несозданных НМ с ошибками\". Для того чтобы убрать НМ из ошибочных, необходимо повторно сделать запрос с исправленными ошибками.\n",
        "tags": ["Контент / Загрузка"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vendorCode": {
                    "description": "Артикул продавца",
                    "type": "string"
                  },
                  "cards": {
                    "description": "Массив НМ которые хотим добавить к КТ",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "vendorCode": {
                          "description": "Артикул продавца",
                          "type": "string"
                        },
                        "characteristics": {
                          "description": "Массив характеристик, индивидуальный для каждой категории",
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "sizes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "techSize": {
                                "description": "Размер товара (пример S, M, L, XL, 42, 42-43)",
                                "type": "string"
                              },
                              "wbSize": {
                                "description": "Российский размер товара",
                                "type": "string"
                              },
                              "price": {
                                "description": "Цена (указывается в рублях)",
                                "type": "integer"
                              },
                              "skus": {
                                "description": "Массив баркодов, строковых идентификаторов размеров товара (их можно сгенерировать с помощью API, см. Viewer)",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "vendorCode": "6000000001",
                "cards": [
                  {
                    "characteristics": [
                      {
                        "ТНВЭД": "4203100001"
                      },
                      {
                        "Ширина упаковки": 2
                      },
                      {
                        "Длина упаковки": 2
                      },
                      {
                        "Высота упаковки": 2
                      },
                      {
                        "Пол": ["Женский"]
                      },
                      {
                        "Цвет": "красный"
                      },
                      {
                        "Предмет": "Платья"
                      },
                      {
                        "Стилистика": ["casual"]
                      },
                      {
                        "Комплектация": [
                          "Платье женское - 1шт"
                        ]
                      },
                      {
                        "Бренд": ["GlisH"]
                      }
                    ],
                    "vendorCode": "6000000002",
                    "sizes": [
                      {
                        "techSize": "38-39",
                        "wbSize": "38-39",
                        "price": 3000,
                        "skus": ["test333333331"]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/barcodes": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Генерация баркодов",
        "description": "Метод позволяет сгенерировать массив уникальных баркодов для создания размера НМ в КТ.",
        "tags": ["Контент / Загрузка"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "count": {
                    "description": "Кол-во баркодов которые надо сгенерировать, максимальное доступное количество баркодов для генерации - `5000`",
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Массив сгенерированых баркодов",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "5032781145187"
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/cursor/list": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список НМ",
        "description": "Метод позволяет получить список созданых НМ по фильтру (баркод, артикул продавца, артикул WB (nmId), тег) с пагинацией и сортировкой. <br> <br>Порядок работы с `cursor/list`: <br> Чтобы получить полный список номенклатур, <b>если их > 1000</b>, необходимо воспользоваться пагинацией.\n  <ol>\n    <li>Cделать первый запрос (все указанные ниже параметры обязательны): <br>\n      <pre style=\"background-color: rgb(38 50 56 / 5%); color: #e53935\">\n        {\n          \"sort\": {\n              \"cursor\": {\n                  \"limit\": 1000\n              },\n              \"filter\": {\n                  \"withPhoto\": -1\n              }\n          }\n        }</pre>\n      По желанию можно добавить поиск по <code>\"textSearch\"</code> и сортировку.\n      <pre style=\"background-color: rgb(38 50 56 / 5%); color: #e53935\">\n        \"sort\": {\n          \"sortColumn\": \"\",\n          \"ascending\": false\n        }</pre>\n    </li>\n    <li>Пройти в конец полученного списка номенклатур, скопировать из <code>cursor</code> две строки:\n      <ul>\n        <li><code>\"updatedAt\": \"***\"</code>,</li>\n        <li><code>\"nmID\": ***</code>,</li>\n      </ul>\n    <li>Вставить скопированные строки в <code>cursor</code> запроса, повторить вызов метода. </li>\n    <li>Повторять пункты <b>2</b> и <b>3</b>, пока <code>total</code> в ответе не станет меньше чем <code>limit</code> в запросе.\n      <br>Это будет означать, что Вы получили все карточки.\n  </ol>\n",
        "tags": ["Контент / Просмотр"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sort": {
                    "type": "object",
                    "properties": {
                      "cursor": {
                        "type": "object",
                        "properties": {
                          "updatedAt": {
                            "description": "Время обновления последней КТ из предыдущего ответа на запрос списка КТ.",
                            "type": "string",
                            "example": "2022-09-23T17:41:32Z"
                          },
                          "nmID": {
                            "description": "Артикул WB последней КТ из предыдущего ответа на запрос списка КТ.",
                            "type": "integer",
                            "example": 66965444
                          },
                          "limit": {
                            "description": "Кол-во запрашиваемых КТ.",
                            "type": "integer",
                            "example": 1000
                          }
                        }
                      },
                      "filter": {
                        "type": "object",
                        "properties": {
                          "textSearch": {
                            "description": "Поиск по артикулу WB, артикулу продавца, баркоду или тегу",
                            "type": "integer",
                            "example": "test"
                          },
                          "withPhoto": {
                            "description": "`-1` - Показать все КТ. <br>`0` - Показать КТ без фото. <br>`1` - Показать КТ с фото.\n",
                            "type": "integer",
                            "example": -1
                          },
                          "allowedCategoriesOnly": {
                            "description": "<code>true</code> - показать КТ только из разрешенных к реализации категорий<br> <code>false</code> - показать КТ из всех категорий\n",
                            "type": "boolean"
                          }
                        }
                      },
                      "sort": {
                        "type": "object",
                        "properties": {
                          "sortColumn": {
                            "description": "Поле, по которому будет сортироваться список КТ (пока поддерживается только updateAt).",
                            "type": "string",
                            "example": "updateAt"
                          },
                          "ascending": {
                            "description": "Тип сортировки.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "cards": {
                          "description": "Список запрашиваемых КТ",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "sizes": {
                                "description": "Массив размеров для номенклатуры (для безразмерного товара все равно нужно передавать данный массив с одним элементом и нулевым размером, но с ценой и баркодом)\n",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "techSize": {
                                      "description": "Размер товара (пример S, M, L, XL, 42, 42-43)",
                                      "type": "string",
                                      "example": "0"
                                    },
                                    "skus": {
                                      "description": "Массив баркодов, строковых идентификаторов размеров товара (их можно сгенерировать с помощью API, см. Viewer)",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "5032781142964"
                                      }
                                    }
                                  }
                                }
                              },
                              "mediaFiles": {
                                "description": "Медиафайлы номенклатуры. <br>Фото, URL которого заканчивается на <b>1.jpg</b> является главным в карточке.\n",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "http://imglink.com/imgOne.jpg"
                                }
                              },
                              "colors": {
                                "description": "Цвета номенклатуры",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "белый"
                                }
                              },
                              "updateAt": {
                                "description": "Дата обновления",
                                "type": "string",
                                "example": "2022-08-10T10:16:52Z"
                              },
                              "vendorCode": {
                                "description": "Артикул продавца",
                                "type": "string",
                                "example": "670000001"
                              },
                              "brand": {
                                "description": "Брэнд",
                                "type": "string",
                                "example": "Шанель"
                              },
                              "object": {
                                "description": "Категория для который создавалось КТ с данной НМ",
                                "type": "string",
                                "example": "Туалетная вода"
                              },
                              "nmID": {
                                "description": "Артикул WB",
                                "type": "integer",
                                "example": 66964167
                              },
                              "imtID": {
                                "description": "Идентификатор карточки товара (нужен для группирования НМ в одну КТ)",
                                "type": "integer",
                                "example": 12313123
                              },
                              "chrtID": {
                                "description": "Числовой идентификатор размера для данной номенклатуры Wildberries",
                                "type": "integer",
                                "example": 116108635
                              },
                              "isProhibited": {
                                "description": "`true` - категория карточки запрещена к реализации<br> `false` - категория карточки разрешена к реализации\n",
                                "type": "boolean",
                                "example": false
                              },
                              "tags": {
                                "type": "array",
                                "description": "Массив тегов",
                                "items": {
                                  "type": "string",
                                  "example": []
                                }
                              }
                            }
                          }
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "updatedAt": {
                              "description": "Дата с которой надо запрашивать следующий список КТ",
                              "type": "string",
                              "example": "2022-08-10T10:16:52Z"
                            },
                            "nmID": {
                              "description": "Номер Артикула WB с которой надо запрашивтаь следующий список КТ",
                              "type": "integer",
                              "example": 66964167
                            },
                            "total": {
                              "description": "Кол-во возвращенных КТ",
                              "type": "integer",
                              "example": 1
                            }
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/error/list": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список несозданных НМ с ошибками",
        "description": "Метод позволяет получить список НМ и список ошибок которые произошли во время создания КТ. <br>`ВАЖНО`: Для того чтобы убрать НМ из ошибочных, надо повторно сделать запрос с исправленными ошибками на создание КТ.\n",
        "tags": ["Контент / Просмотр"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "object": {
                            "description": "Категория для который создавалось КТ с данной НМ",
                            "type": "string",
                            "example": "Блузка"
                          },
                          "vendorCode": {
                            "description": "Артикул продавца",
                            "type": "string",
                            "example": "6000000001"
                          },
                          "updateAt": {
                            "description": "Дата и время запроса на создание КТ с данным НМ",
                            "type": "string",
                            "example": "2022-06-15T14:37:13Z"
                          },
                          "errors": {
                            "description": "Список ошибок из-за которых не обработался запрос на создание КТ с данным НМ",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "Поля Рос. размер, Размер обязательны для заполнения"
                            }
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/filter": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Получение КТ по артикулам продавца",
        "description": "Метод позволяет получить полную информацию по КТ с помощью артикула(-ов) продавца.\n",
        "tags": ["Контент / Просмотр"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vendorCodes": {
                    "description": "Массив  артикулов продавца. <br>Максимальное количество в запросе `100`.\n",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "6000000001"
                    }
                  },
                  "allowedCategoriesOnly": {
                    "description": "<code>true</code> - показать КТ только из разрешенных к реализации категорий<br> <code>false</code> - показать КТ из всех категорий\n",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "imtID": {
                            "description": "Идентификатор карточки товара (нужен для группирования НМ в одно КТ)",
                            "type": "integer"
                          },
                          "nmID": {
                            "description": "Артикул WB",
                            "type": "integer"
                          },
                          "vendorCode": {
                            "description": "Артикул продавца",
                            "type": "string"
                          },
                          "isProhibited": {
                            "description": "`true` - категория карточки запрещена к реализации<br> `false` категория карточки разрешена к реализации\n",
                            "type": "boolean"
                          },
                          "mediaFiles": {
                            "description": "Медиафайлы номенклатуры. <br>Фото, URL которого заканчивается на <b>1.jpg</b> является главным в карточке.\n",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sizes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "techSize": {
                                  "description": "Размер товара (пример S, M, L, XL, 42, 42-43)",
                                  "type": "string"
                                },
                                "wbSize": {
                                  "description": "Российский размер товара",
                                  "type": "string"
                                },
                                "price": {
                                  "description": "Цена, `неактивно`, для уточнения цены используйте метод \"Получение информации о ценах\" раздел документации Цены.\n",
                                  "type": "integer"
                                },
                                "chrtID": {
                                  "description": "Числовой идентификатор размера для данной номенклатуры Wildberries",
                                  "type": "integer"
                                },
                                "skus": {
                                  "description": "Массив баркодов, строковых идентификаторов размеров товара (их можно сгенерировать с помощью API, см. Viewer)",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "characteristics": {
                            "description": "Массив характеристик, индивидуальный для каждой категории",
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки."
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "imtID": 9876545135,
                      "nmID": 7986515498,
                      "vendorCode": "vendorCode",
                      "mediaFiles": [
                        "URLphoto",
                        "URLvideo"
                      ],
                      "sizes": [
                        {
                          "techSize": "50-52",
                          "skus": ["9845613215468"],
                          "chrtID": 87654235466,
                          "wbSize": "50-52",
                          "price": 10500
                        },
                        {
                          "techSize": "54-56",
                          "skus": ["9876513216546"],
                          "chrtID": 651898613,
                          "wbSize": "54-56",
                          "price": 10500
                        },
                        {
                          "techSize": "46-48",
                          "skus": ["984532321"],
                          "chrtID": 5465646,
                          "wbSize": "46-48",
                          "price": 10500
                        },
                        {
                          "techSize": "42-44",
                          "skus": ["123123123"],
                          "chrtID": 12313213,
                          "wbSize": "42-44",
                          "price": 10500
                        }
                      ],
                      "characteristics": [
                        {
                          "Ширина упаковки": 25
                        },
                        {
                          "Высота упаковки": 5
                        },
                        {
                          "Длина упаковки": 30
                        },
                        {
                          "Особенности модели": [
                            "дышащий материал"
                          ]
                        },
                        {
                          "Тип ростовки": [
                            "для среднего роста"
                          ]
                        },
                        {
                          "Дата регистрации сертификата/декларации": [
                            "23.12.2019"
                          ]
                        },
                        {
                          "Вид застежки": ["без застежки"]
                        },
                        {
                          "Покрой": ["полуприлегающий"]
                        },
                        {
                          "Рисунок": ["апельсины"]
                        },
                        {
                          "Уход за вещами": [
                            "стирка при t не более 30°C"
                          ]
                        },
                        {
                          "Возрастная группа(лет)": [
                            "Женщины девушки"
                          ]
                        },
                        {
                          "Цвет": ["оранжевый"]
                        },
                        {
                          "ТНВЭД": ["6104620000"]
                        },
                        {
                          "Ставка НДС": ["20"]
                        },
                        {
                          "Тип рукава": ["без рукавов"]
                        },
                        {
                          "Утеплитель": ["без утепления"]
                        },
                        {
                          "Назначение": [
                            "домашняя одежда",
                            "повседневная",
                            "пляж"
                          ]
                        },
                        {
                          "Модель брюк": ["свободные"]
                        },
                        {
                          "Модель комбинезона": ["домашний"]
                        },
                        {
                          "Фактура материала": ["гладкий"]
                        },
                        {
                          "Пол": ["Женский"]
                        },
                        {
                          "Размер на модели": ["42-44"]
                        },
                        {
                          "Комплектация": [
                            "комбинезон-1шт."
                          ]
                        },
                        {
                          "Дата окончания действия сертификата/декларации": [
                            "22.12.2029"
                          ]
                        },
                        {
                          "Коллекция": ["Весна-Лето 2023"]
                        },
                        {
                          "Бренд": "Бренд"
                        },
                        {
                          "Состав": [
                            "92% хлопок,8% эластан"
                          ]
                        },
                        {
                          "Номер декларации соответствия": [
                            "Номер декларации"
                          ]
                        },
                        {
                          "Предмет": "Комбинезоны"
                        },
                        {
                          "Наименование": "Комбинезон пижамный домашний женский"
                        },
                        {
                          "Описание": "Комбинезон на бретелях свободного объема с фигурным вырезом на спине."
                        }
                      ],
                      "isProhibited": false
                    }
                  ],
                  "error": false,
                  "errorText": "",
                  "additionalErrors": null
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/limits": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Лимиты по КТ",
        "description": "Метод позволяет получить отдельно бесплатные и платные лимиты продавца на создание карточек товаров.",
        "tags": ["Контент / Просмотр"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "freeLimits": {
                          "description": "Количество бесплатных лимитов",
                          "type": "integer"
                        },
                        "paidLimits": {
                          "description": "Количество оплаченных лимитов",
                          "type": "integer"
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки",
                      "type": "boolean"
                    },
                    "errorText": {
                      "description": "Описание ошибки",
                      "type": "string"
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки"
                    }
                  }
                },
                "example": {
                  "data": {
                    "freeLimits": 1500,
                    "paidLimits": 10
                  },
                  "error": false,
                  "errorText": "",
                  "additionalErrors": null
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/object/all": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Категория товаров",
        "description": "С помощью данного метода можно получить список категорий товаров по текстовому фильтру (названию категории). <br> <br> Чтобы получить список всех категорий необходимо указать `top=8000`, к примеру. <br> <br> По состоянию на `27.03.2023` в списке `7440` категорий. Количество доступных категорий может меняться.      \n",
        "tags": ["Контент / Конфигуратор"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "3D"
            },
            "description": "Поиск по названию категории"
          },
          {
            "name": "top",
            "in": "query",
            "description": "Количество запрашиваемых значений",
            "schema": {
              "type": "integer",
              "example": 50
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "objectName": {
                            "description": "Название категории",
                            "type": "string",
                            "example": "3D очки"
                          },
                          "parentName": {
                            "description": "Название родительской категории",
                            "type": "string",
                            "example": "Электроника"
                          },
                          "isVisible": {
                            "description": "Виден на сайте",
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/object/parent/all": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Родительские категории товаров",
        "description": "С помощью данного метода можно получить список всех родительских категорий товаров.",
        "tags": ["Контент / Конфигуратор"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Название категории",
                            "type": "string",
                            "example": "Электроника"
                          },
                          "isVisible": {
                            "description": "Виден на сайте",
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/object/characteristics/list/filter": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Характеристики для создания КТ по всем подкатегориям",
        "description": "С помощью данного метода можно получить список характеристик, которые можно или нужно заполнить при создании КТ в подкатегории определенной родительской категории.\n  <br>\n  <br>Характеристики с  `charcType=4`, имеющие единственное значение, <b>указывать строго без массива</b>, в противном случае карточка не будет создана:\n  <br><b>Правильно:</b>\n      <br>`{\"Высота упаковки\": 4}`\n  <br><b>Не правильно:</b>\n      <br>`{\"Высота упаковки\": [4]}`\n",
        "tags": ["Контент / Конфигуратор"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Косухи"
            },
            "description": "Поиск по родительской категории."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "objectName": {
                            "description": "Наименование подкатегории",
                            "type": "string",
                            "example": "Косухи"
                          },
                          "name": {
                            "description": "Наименование характеристики",
                            "type": "string",
                            "example": "Особенности модели"
                          },
                          "required": {
                            "description": "Характеристика обязательна к заполенению",
                            "type": "boolean",
                            "example": false
                          },
                          "unitName": {
                            "description": "Единица имерения (см, гр и т.д.)",
                            "type": "string",
                            "example": ""
                          },
                          "maxCount": {
                            "description": "Максимальное кол-во значений которое можно присвоить данной характеристике",
                            "type": "integer",
                            "example": 1
                          },
                          "popular": {
                            "description": "Характеристика популярна у пользователей",
                            "type": "boolean",
                            "example": false
                          },
                          "charcType": {
                            "description": "Тип характеристики (1 и 0 - строка или массив строк; 4 - число или массив чисел)",
                            "type": "integer",
                            "example": 1
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/object/characteristics/{objectName}": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Характеристики для создания КТ для категории товара",
        "description": "С помощью данного метода можно получить список характеристик, которые можно или нужно заполнить при создании КТ для определенной категории товаров. <br> <br> `Важно`: обязательная к заполнению характеристика при создании карточки любого товара - `Предмет`. <br>Значение характеристики `Предмет` соответствует значению параметра `objectName` в запросе. <br> <br>Характеристики с  `charcType=4`, имеющие единственное значение, <b>указывать строго без массива</b>, в противном случае карточка не будет создана: <br><b>Правильно:</b>\n    <br>`{\"Высота упаковки\": 4}`\n<br><b>Не правильно:</b>\n    <br>`{\"Высота упаковки\": [4]}`\n",
        "tags": ["Контент / Конфигуратор"],
        "parameters": [
          {
            "name": "objectName",
            "in": "path",
            "schema": {
              "type": "string",
              "example": "Носки"
            },
            "description": "Поиск по наименованию категории",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "objectName": {
                            "description": "Наименование подкатегории",
                            "type": "string",
                            "example": "Носки"
                          },
                          "name": {
                            "description": "Наименование характеристики",
                            "type": "string",
                            "example": "Глубина упаковки"
                          },
                          "required": {
                            "description": "Характеристика обязательна к заполенению",
                            "type": "boolean",
                            "example": false
                          },
                          "unitName": {
                            "description": "Единица имерения (см, гр и т.д.)",
                            "type": "string",
                            "example": "см"
                          },
                          "maxCount": {
                            "description": "Максимальное кол-во значений, которое можно присвоить данной характеристике. <br>Если 0, то нет ограничения.\n",
                            "type": "integer",
                            "example": 0
                          },
                          "popular": {
                            "description": "Характеристика популярна у пользователей",
                            "type": "boolean",
                            "example": false
                          },
                          "charcType": {
                            "description": "Тип характеристики (1 и 0 - строка или массив строк; 4 - число или массив чисел)",
                            "type": "integer",
                            "example": 4
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/colors": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Цвет",
        "description": "Получение значения характеристики цвет.",
        "tags": ["Контент / Конфигуратор"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Наименование цвета",
                            "type": "string",
                            "example": "персиковый крайола"
                          },
                          "parentName": {
                            "description": "Наименование родительского цвета",
                            "type": "string",
                            "example": "оранжевый"
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/kinds": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Пол",
        "description": "Получение значения характеристики пол.",
        "tags": ["Контент / Конфигуратор"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Массив значений для хар-ки Пол",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Мужской"
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/countries": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Страна Производства",
        "description": "Получение значения характеристики Страна Производства.",
        "tags": ["Контент / Конфигуратор"],
        "responses": {
          "200": {
            "400": {
              "description": "Неверная форма запроса.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/responseBodyError400"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Значение характеристики Страны",
                            "type": "string",
                            "example": "Афганистан"
                          },
                          "fullName": {
                            "description": "Полное название страны",
                            "type": "string",
                            "example": "Исламский Эмират Афганистан"
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/seasons": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Сезон",
        "description": "Получение значения характеристики Сезон.",
        "tags": ["Контент / Конфигуратор"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Массив значений для хар-ки Сезон",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "демисезон"
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/brands": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Бренд",
        "description": "Получение значения характеристики Бренд.",
        "tags": ["Контент / Конфигуратор"],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "Количество запрашиваемых значений (максимум 5000)",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "Поиск по наименованию значения характеристики",
            "schema": {
              "type": "string",
              "example": "USB"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Массив найденных брендов",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "1001 Каталог"
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/tnved": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "ТНВЭД код",
        "description": "С помощью данного метода можно получить список ТНВЭД кодов по имени категории и фильтру по тнвэд коду.",
        "tags": ["Контент / Конфигуратор"],
        "parameters": [
          {
            "name": "objectName",
            "in": "query",
            "description": "Поиск по наименованию категории",
            "schema": {
              "type": "string",
              "example": "Блузки"
            }
          },
          {
            "name": "tnvedsLike",
            "in": "query",
            "description": "Поиск по коду ТНВЭД",
            "schema": {
              "type": "string",
              "example": "4203100001"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "subjectName": {
                            "description": "Наименование категории",
                            "type": "string",
                            "example": "Блузки"
                          },
                          "tnvedName": {
                            "description": "Код ТНВЭД",
                            "type": "string",
                            "example": "4203100001"
                          },
                          "description": {
                            "description": "Описание кода ТНВЭД",
                            "type": "string",
                            "example": "Предметы одежды из натуральной кожи"
                          },
                          "isKiz": {
                            "description": "КИЗовый ТНВЭД",
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/media/save": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Изменение медиа контента КТ",
        "description": "Метод позволяет изменить порядок изображений или удалить медиафайлы с НМ в КТ, а также загрузить изображения в НМ со сторонних ресурсов по URL. <br>Текущие изображения заменяются на переданные в массиве data. <br> <br>Требования к медиафайлам: <br>`Фото`: минимальное разрешение – 450х450. <br>Максимально допустимое количество фото в КТ 30.  <br>Допустимые форматы изображений - jpg и png. <br> <br>Если хотя бы одно изображение в запросе не соответствует требованиям к медиафайлам, то даже при коде ответа 200 ни одно изображение не загрузится в КТ.\n",
        "tags": ["Контент / Медиафайлы"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vendorCode": {
                    "description": "Артикул продавца",
                    "type": "string",
                    "example": "6000000001"
                  },
                  "data": {
                    "description": "Ссылки на изображения в том порядке, в котором мы хотим их увидеть в карточке товара.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "https://basket-stage-02.wb.ru/vol669/part66964/66964260/images/big/2.jpg"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/media/file": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Добавление медиа контента в КТ",
        "description": "Метод позволяет загрузить и добавить один медиафайл за запрос, к НМ в КТ.\n<br>Требования к медиафайлам: <br>`Фото`: минимальное разрешение – 450х450. <br>Максимально допустимое количество фото в КТ 30. <br>Допустимые форматы изображений - jpg и png. <br>`Видео`: максимальный размер 50 мб. Форматы MOV, MP4. <br>Максимально допустимое количество видео в КТ 1.\n",
        "tags": ["Контент / Медиафайлы"],
        "parameters": [
          {
            "name": "X-Vendor-Code",
            "in": "header",
            "description": "Артикул продавца",
            "schema": {
              "type": "string",
              "example": "6000000001"
            },
            "required": true
          },
          {
            "name": "X-Photo-Number",
            "in": "header",
            "description": "Номер медиафайла на загрузку. <b>Начинать с 1</b>. <br>Чтобы добавить фото к уже загруженным в НМ, номер медиафайла должен быть больше кол-ва загруженных в НМ медиафайлов.\n",
            "schema": {
              "type": "integer",
              "example": 2
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "uploadfile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/tags": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список тегов",
        "description": "Метод позволяет получить список существующих тегов продавца.",
        "tags": ["Контент / Теги"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "description": "Числовой идентификатор тега",
                          "type": "integer"
                        },
                        "color": {
                          "description": "Цвет тега",
                          "type": "string"
                        },
                        "name": {
                          "description": "Имя тега",
                          "type": "string"
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки",
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 1,
                      "color": "D1CFD7",
                      "name": "Sale"
                    }
                  ],
                  "error": false,
                  "errorText": "",
                  "additionalErrors": ""
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/tag": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Создание тега",
        "description": "Метод позволяет создать тег.<br> Завести можно 8 тегов.<br> Максимальная длина тега 15 символов.\n",
        "tags": ["Контент / Теги"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "color": {
                    "description": "Цвет тега. <dl> <dt>Доступные цвета:</dt> <dd><code>D1CFD7</code> - серый</dd> <dd><code>FEE0E0</code> - красный</dd> <dd><code>ECDAFF</code> - фиолетовый</dd> <dd><code>E4EAFF</code> - синий</dd> <dd><code>DEF1DD</code> - зеленный</dd> <dd><code>FFECC7</code> - желтый</dd> </dl>\n",
                    "type": "string",
                    "example": "D1CFD7"
                  },
                  "name": {
                    "description": "Имя тега",
                    "type": "string",
                    "example": "Sale"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseOK200"
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/responseBodyError400"
                    },
                    {
                      "$ref": "#/components/schemas/responseBody400LenName"
                    },
                    {
                      "$ref": "#/components/schemas/responseBodyLimitTag"
                    },
                    {
                      "$ref": "#/components/schemas/responseBodyNameNotExist"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/tag/{id}": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "patch": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Изменение тега",
        "description": "Метод позволяет изменять информацию о теге (имя и цвет).",
        "tags": ["Контент / Теги"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Числовой идентификатор тега",
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "color": {
                    "description": "Цвет тега",
                    "type": "string",
                    "example": "D1CFD7"
                  },
                  "name": {
                    "description": "Имя тега",
                    "type": "string",
                    "example": "Sale"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/responseOK200"
                    },
                    {
                      "$ref": "#/components/schemas/responseNotFound200"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/responseBodyError400"
                    },
                    {
                      "$ref": "#/components/schemas/responseBody400LenName"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Удаление тега",
        "description": "Метод позволяет удалить тег.",
        "tags": ["Контент / Теги"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Числовой идентификатор тега",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/responseOK200"
                    },
                    {
                      "$ref": "#/components/schemas/responseNotFound200Del"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/responseBodyError400"
                    },
                    {
                      "$ref": "#/components/schemas/responseBodyTagNotExist"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/tag/nomenclature/link": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Управление тегами в КТ",
        "description": "Метод позволяет добавить теги к КТ и снять их с КТ.<br> При снятии тега с КТ сам тег не удаляется.<br> К карточке можно добавить 8 тегов.\n",
        "tags": ["Контент / Теги"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nmID": {
                    "description": "Артикул WB",
                    "type": "integer"
                  },
                  "tagsIDs": {
                    "description": "Массив числовых идентификаторов тегов.<br>   Что бы снять теги с КТ, необходимо передать пустой массив.<br> Чтобы добавить теги к уже имеющимся в КТ, необходимо в запросе передать новые теги и теги, которые уже есть в КТ.\n",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Числовой идентификатор тега."
                    }
                  }
                }
              },
              "example": {
                "nmID": 179891389,
                "tagsIDs": [123456]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseOK200"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncorrectRequest"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError500"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/trash/list": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список НМ, находящихся в корзине",
        "description": "Метод позволяет получить список НМ, находящихся в корзине.<br> Метод позволяет получить список НМ, которые находятся в корзине по фильтру (баркод (<code>skus</code>), артикул продавца(<code>vendorCode</code>), артикул WB(<code>nmID</code>)) с пагинацией и сортировкой.\n",
        "tags": ["Контент / Корзина"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sort": {
                    "type": "object",
                    "properties": {
                      "sortColumn": {
                        "description": "Поле, по которому будет сортироваться список КТ (пока что поддерживается только `updateAt`)\n",
                        "type": "string"
                      },
                      "ascending": {
                        "description": "Тип сортировки",
                        "type": "boolean"
                      },
                      "searchValue": {
                        "description": "Поле, по которому будет осуществляться поиск: по баркоду(`skus`), артикулу продавца (`vendorCode`), артикулу WB (`nmID`)\n",
                        "type": "string"
                      },
                      "offset": {
                        "description": "С какого элемента выдавать данные",
                        "type": "integer"
                      },
                      "limit": {
                        "description": "Кол-во запрашиваемых КТ (max. 1000)",
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "example": {
                "sort": {
                  "sortColumn": "updateAt",
                  "ascending": false,
                  "searchValue": "vendorCodeOne",
                  "offset": 0,
                  "limit": 50
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "cards": {
                          "description": "Список запрашиваемых КТ",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "nmID": {
                                "description": "Артикул WB",
                                "type": "integer"
                              },
                              "vendorCode": {
                                "description": "Артикул продавца",
                                "type": "string"
                              },
                              "object": {
                                "description": "Категория для который создавалось КТ с данной НМ",
                                "type": "string"
                              },
                              "brand": {
                                "description": "Брэнд",
                                "type": "string"
                              },
                              "updateAt": {
                                "description": "Дата обновления",
                                "type": "string"
                              },
                              "colors": {
                                "description": "Цвета номенклатуры",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "mediaFiles": {
                                "description": "Медиафайлы номенклатуры. <br>Фото, URL которого заканчивается на <b>1.jpg</b> является главным в карточке.\n",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "sizes": {
                                "description": "Массив размеров для номенклатуры (для безразмерного товара все равно нужно передавать данный массив с одним элементом и нулевым размером, но с ценой и баркодом)\n",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "skus": {
                                      "description": "Массив баркодов, строковых идентификаторов размеров товара (их можно сгенерировать с помощью API, см. Viewer)",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "techSize": {
                                      "description": "Размер товара (пример S, M, L, XL, 42, 42-43)",
                                      "type": "string"
                                    },
                                    "wbSize": {
                                      "description": "Российский размер товара",
                                      "type": "string"
                                    },
                                    "price": {
                                      "description": "Цена",
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "offset": {
                              "description": "Смещение относительно первой РК",
                              "type": "integer"
                            },
                            "limit": {
                              "description": "Кол-во запрашиваемых КТ",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки",
                      "type": "boolean"
                    },
                    "errorText": {
                      "description": "Описание ошибки",
                      "type": "string"
                    },
                    "additionalErrors": {
                      "type": "string",
                      "description": "Дополнительные ошибки"
                    }
                  }
                },
                "example": {
                  "data": {
                    "cards": [
                      {
                        "nmID": 12213123,
                        "vendorCode": "vendorCodeOne",
                        "object": "Шляпа",
                        "brand": "TestBrandOne",
                        "updatedAt": "2022-04-19T15:21:10Z",
                        "colors": ["красный"],
                        "mediaFiles": [
                          "mediaFileLink1",
                          "mediaFileLink2"
                        ],
                        "sizes": [
                          {
                            "skus": ["barcode001"],
                            "techSize": "42",
                            "wbSize": "42",
                            "price": 2000
                          }
                        ]
                      }
                    ],
                    "cursor": {
                      "offset": 0,
                      "limit": 50
                    }
                  },
                  "error": false,
                  "errorText": "",
                  "additionalErrors": ""
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/warehouses": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Cписок складов",
        "description": "Cписок складов продавца.",
        "tags": ["Marketplace / Остатки"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "ID склада.",
                        "type": "integer",
                        "example": 5235
                      },
                      "name": {
                        "description": "Наименование склада.",
                        "type": "string",
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          }
        }
      }
    },
    "/api/v3/stocks/{warehouse}": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "put": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Остатки"],
        "summary": "Обновить остатки товаров",
        "description": "Обновляет остатки товаров.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Warehouse"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["stocks"],
                "properties": {
                  "stocks": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 1000,
                    "description": "Массив баркодов товаров и их остатков",
                    "items": {
                      "type": "object",
                      "properties": {
                        "sku": {
                          "type": "string",
                          "description": "Баркод",
                          "example": "BarcodeTest123"
                        },
                        "amount": {
                          "type": "integer",
                          "maximum": 100000,
                          "description": "Остаток",
                          "example": 10
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Обновлено"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  },
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Ошибка обновления остатков",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "example": [
                    {
                      "code": "SubjectDBSRestriction",
                      "message": "Категория товара недоступна для продажи по схеме 'Везу на склад Wildberries'.",
                      "data": [
                        {
                          "sku": "skuTest1",
                          "stock": 0
                        }
                      ]
                    },
                    {
                      "code": "SubjectFBSRestriction",
                      "message": "Категория товара недоступна для продажи по схеме 'Везу самостоятельно до покупателя'.",
                      "data": [
                        {
                          "sku": "skuTest2",
                          "stock": 1
                        }
                      ]
                    },
                    {
                      "code": "UploadDataLimit",
                      "message": "Превышен лимит загружаемых данных",
                      "data": [
                        {
                          "sku": "skuTest2",
                          "stock": 100001
                        }
                      ]
                    },
                    {
                      "code": "CargoWarehouseRestriction",
                      "message": "Выбранный склад не предназначен для крупногабаритных товаров. Добавьте их на соответствующий склад",
                      "data": [
                        {
                          "sku": "skuTest3",
                          "stock": 10
                        }
                      ]
                    },
                    {
                      "code": "NotFound",
                      "message": "Не найдено",
                      "data": [
                        {
                          "sku": "skuTest4",
                          "stock": 10
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Остатки"],
        "summary": "Удалить остатки товаров",
        "description": "Удаляет остатки товаров. **Внимание! Действие необратимо**. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Warehouse"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "skus": {
                    "type": "array",
                    "nullable": false,
                    "minItems": 1,
                    "maxItems": 1000,
                    "description": "Массив баркодов",
                    "items": {
                      "type": "string",
                      "nullable": false,
                      "example": "BarcodeTest123"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Удалено"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  },
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "description": "Не найдены запрашиваемые данные",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": "NotFound",
                  "message": "Не найдено",
                  "data": ["skuTest1", "skuTest2"]
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Остатки"],
        "summary": "Получить остатки товаров",
        "description": "Возвращает остатки товаров.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Warehouse"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "nullable": false,
                "minItems": 1,
                "maxItems": 1000,
                "properties": {
                  "skus": {
                    "type": "array",
                    "description": "Массив баркодов",
                    "items": {
                      "type": "string",
                      "example": "BarcodeTest123"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Список остатков",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stocks": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "sku": {
                            "type": "string",
                            "nullable": false,
                            "description": "Баркод",
                            "example": "BarcodeTest123"
                          },
                          "amount": {
                            "type": "integer",
                            "nullable": false,
                            "description": "Остаток",
                            "example": 10
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  },
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Создать новую поставку",
        "description": "**Ограничения работы с поставками**:\n\n- Только для сборочных заданий по схеме \"Везу на склад WB\"\n- При добавлении в поставку все передаваемые сборочные задания в статусе **new** (\"Новое\") будут автоматически переведены в статус **confirm** (\"На сборке\").\n- Обратите внимание, что если вы переведёте сборочное задание в статус **cancel** (\"Отмена продавцом\"), то сборочное задание автоматически удалится из поставки, если было прикреплено к ней.\n- Поставку можно собрать только из одного типа сборочных заданий: сКГТ (isLargeCargo = true) или обычный (isLargeCargo = false). Новая поставка не обладает сКГТ-признаком. При добавлении первого заказа в поставку она приобретает сКГТ-признак добавляемого товара в заказе.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "description": "Наименование поставки",
                    "example": "Тестовая поставка"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Создано",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": false,
                      "description": "Идентификатор поставки",
                      "example": "WB-GI-1234567"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Получить список поставок",
        "description": "Возвращает список поставок",
        "parameters": [
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Next"
          }
        ],
        "responses": {
          "200": {
            "description": "Список поставок",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "next": {
                      "$ref": "#/components/schemas/Next"
                    },
                    "supplies": {
                      "type": "array",
                      "nullable": false,
                      "description": "Список поставок",
                      "items": {
                        "$ref": "#/components/schemas/Supply"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/{supply}": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Получить информацию о поставке",
        "description": "Возвращает информацию о поставке",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о поставке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supply"
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Удалить поставку",
        "description": "Удаляет поставку, если она активна и за ней не закреплено ни одно сборочное задание.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          }
        ],
        "responses": {
          "204": {
            "description": "Удалено"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "За поставкой закреплены сборочные задания",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SupplyHasOrders": {
                    "$ref": "#/components/examples/SupplyHasOrders"
                  }
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/{supply}/orders": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Получить сборочные задания в поставке",
        "description": "Возвращает сборочные задания, закреплённые за поставкой.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          }
        ],
        "responses": {
          "200": {
            "description": "Список сборочных заданий",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "orders": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "$ref": "#/components/schemas/SupplyOrder"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/{supply}/orders/{order}": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "patch": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Добавить к поставке сборочное задание",
        "description": "Добавляет к поставке сборочное задание и переводит его в статус **confirm** (\"На сборке\"). \nТакже может перемещать сборочное задание между активными поставками, либо из закрытой в активную при условии, что сборочное задание требует повторной отгрузки.\nДобавить в поставку возможно только задания с соответствующим сКГТ-признаком (isLargeCargo), либо если поставке ещё не присвоен сКГТ-признак (isLargeCargo = null).\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          },
          {
            "$ref": "#/components/parameters/Order"
          }
        ],
        "responses": {
          "204": {
            "description": "Задание закреплено за поставкой"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Ошибка добавления сборочного задания к поставке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "FailedToAddSupplyOrder": {
                    "$ref": "#/components/examples/FailedToAddSupplyOrder"
                  }
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/{supply}/deliver": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "patch": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Передать поставку в доставку",
        "description": "Закрывает поставку и переводит все сборочные задания в ней в статус **complete** (\"В доставке\").\nПосле закрытия поставки новые сборочные задания к ней добавить будет невозможно.\nПередать поставку в доставку можно только при наличии в ней хотя бы одного сборочного задания.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          }
        ],
        "responses": {
          "204": {
            "description": "Передано в доставку"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Ошибка закрытия поставки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SupplyHasZeroOrders": {
                    "$ref": "#/components/examples/SupplyHasZeroOrders"
                  }
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/{supply}/barcode": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Получить QR поставки",
        "description": "Возвращает QR в svg, zplv (вертикальный), zplh (горизонтальный), png. <br>\nМожно получить, только если поставка передана в доставку.\n<dt>Доступные размеры:</dt>\n<dd>580x400 пикселей\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "description": "Тип этикетки",
            "schema": {
              "type": "string",
              "enum": ["svg", "zplv", "zplh", "png"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QR поставки",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "barcode": {
                      "type": "string",
                      "nullable": false,
                      "description": "Закодированное значение этикетки (идентификатор поставки)",
                      "example": "WB-GI-12345678"
                    },
                    "file": {
                      "type": "string",
                      "format": "byte",
                      "nullable": false,
                      "description": "Полное представление этикетки в заданном формате. (кодировка base64)",
                      "example": "U3dhZ2dlciByb2Nrcw=="
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Ошибка запроса данных",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SupplyNotClosed": {
                    "$ref": "#/components/examples/SupplyNotClosed"
                  }
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders/{order}/cancel": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "patch": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Отменить сборочное задание",
        "description": "Переводит сборочное задание в статус **cancel** (\"Отменено продавцом\").",
        "parameters": [
          {
            "$ref": "#/components/parameters/Order"
          }
        ],
        "responses": {
          "204": {
            "description": "Отменено"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Ошибка обновления статуса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "StatusMismatch": {
                    "$ref": "#/components/examples/StatusMismatch"
                  },
                  "StatusChangeNotAllowed": {
                    "$ref": "#/components/examples/StatusChangeNotAllowed"
                  }
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders/status": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Получить статусы сборочных заданий",
        "description": "Возвращает статусы сборочных заданий по переданному списку идентификаторов сборочных заданий.\n\n**supplierStatus** - статус сборочного задания, триггером изменения которого является сам продавец.<br>\nВозможны следующие значения данного поля:\n| Статус   | Описание            | Как перевести сборочное задание в данный статус |\n| -------  | ---------           | --------------------------------------|\n| new      | Новое сборочное задание |          \n| confirm  | На сборке            | При добавлении сборочного задания к поставке **PATCH** */api/v3/supplies/{supply}/orders/{order}*\n| complete | В доставке           | При переводе в доставку соответствующей поставки **PATCH** */api/v3/supplies/{supply}/deliver*\n| cancel   | Отменено продавцом   | **PATCH** */api/v3/orders/{order}/cancel*\n\n\n**wbStatus** - статус сборочного задания в системе Wildberries.<br>\nВозможны следующие значения данного поля:\n- **waiting** - сборочное задание в работе\n- **sorted** - сборочное задание отсортировано\n- **sold** - сборочное задание получено покупателем\n- **canceled** - отмена сборочного задания\n- **canceled_by_client** - отмена сборочного задания покупателем\n- **defect** - отмена сборочного задания по причине брака\n- **ready_for_pickup** - сборочное задание прибыло на ПВЗ <span class=\"new\">new</span>\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orders": {
                    "type": "array",
                    "required": true,
                    "minItems": 1,
                    "maxItems": 1000,
                    "description": "Список идентификаторов сборочных заданий",
                    "items": {
                      "type": "integer",
                      "format": "int64",
                      "example": 5632423
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Список статусов сборочных заданий",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": false,
                            "description": "Идентификатор сборочного задания",
                            "example": 5632423
                          },
                          "supplierStatus": {
                            "type": "string",
                            "nullable": false,
                            "description": "Статус сборочного задания продавца (устанавливается продавцом)",
                            "enum": [
                              "new",
                              "confirm",
                              "complete",
                              "cancel"
                            ],
                            "example": "new"
                          },
                          "wbStatus": {
                            "type": "string",
                            "nullable": false,
                            "description": "Статус сборочного задания в системе Wildberries",
                            "enum": [
                              "waiting",
                              "sorted",
                              "sold",
                              "canceled",
                              "canceled_by_client"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  },
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Получить информацию по сборочным заданиям",
        "description": "Возвращает информацию по сборочным заданиям без их актуального статуса. \nДанные по сборочному заданию, возвращающиеся в данном методе, не меняются.\nРекомендуется использовать для получения исторических данных.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Next"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Дата начала периода в формате Unix timestamp. Необязательный параметр."
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Дата конца периода в формате Unix timestamp. Необязательный параметр."
          }
        ],
        "responses": {
          "200": {
            "description": "Список сборочных заданий",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "next": {
                      "$ref": "#/components/schemas/Next"
                    },
                    "orders": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders/new": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Получить список новых сборочных заданий",
        "description": "Возвращает список всех новых сборочных заданий у продавца на данный момент.\n",
        "responses": {
          "200": {
            "description": "Список сборочных заданий",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "orders": {
                      "type": "array",
                      "nullable": false,
                      "description": "Список новых сборочных заданий",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders/{order}/meta/sgtin": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Закрепить за сборочным заданием КиЗ (маркировку Честного знака)",
        "description": "Метод позволяет закрепить за сборочным заданием КиЗ (маркировку Честного знака). У одного сборочного задания не может быть больше 24 маркировок. <br> <br> Параметры `sid`, `numerator`, `denominator` опциональны. Заполняются в зависимости от специфики товара. <br> <br> `Важно!` Получить загруженные КиЗ можно только в личном кабинете. Для этого необходимо: <ol>\n <li>Зайти в раздел Маркетплейс - Сборочные задания</li>\n <li>Пройти в любую из перечисленных вкладок (<code>На сборке</code>, <code>В доставке</code>, <code>Архив</code>)</li>\n <li>Зайти в детализацию поставки</li>\n <li>Нажать кнопку \"Выгрузить в Excel\"</li>\n <li>В полученном файле открыть лист КИЗы</li>\n</ol> Получить загруженные КиЗ можно по всем заказам, кроме: <code>Новые</code>, <code>Отменено продавцом</code>.<br> <br> С правилами работы с КиЗ можно ознакомиться тут: https://честныйзнак.рф <br> <br> О реализации API-функционала для получения загруженных КиЗ будет сообщено в разделе Новости, на портале продавцов.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Order"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sgtin": {
                    "type": "array",
                    "description": "Массив КиЗов.",
                    "minItems": 1,
                    "maxItems": 24,
                    "items": {
                      "type": "object",
                      "required": ["code"],
                      "properties": {
                        "code": {
                          "type": "string",
                          "minimum": 16,
                          "maximum": 135,
                          "description": "Код маркировки на упаковке. От 16 до 135 символов.",
                          "example": "1234567890123456"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Отправлено"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  },
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  },
                  "IncorrectSGTIN": {
                    "$ref": "#/components/examples/IncorrectSGTIN"
                  },
                  "MaxCountSGTIN": {
                    "$ref": "#/components/examples/MaxCountSGTIN"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders/stickers": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Marketplace / Сборочные задания"],
        "summary": "Получить этикетки для сборочных заданий",
        "description": "Возвращает список этикеток по переданному массиву сборочных заданий.\nМожно запросить этикетку в формате svg, zplv (вертикальный), zplh (горизонтальный), png.\n\n**Ограничения при работе с методом**:\n- Нельзя запросить больше 100 этикеток за раз (не более 100 идентификаторов сборочных заданий в запросе).\n- Метод возвращает этикетки только для сборочных заданий, находящихся на сборке (в статусе **confirm**).\n- Доступные размеры:\n<dd>580x400 пикселей, при параметрах width = 58, height = 40</dd>\n<dd>400x300 пикселей, при параметрах width = 40, height = 30</dd>\n",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "description": "Тип этикетки",
            "schema": {
              "type": "string",
              "enum": ["svg", "zplv", "zplh", "png"]
            }
          },
          {
            "name": "width",
            "in": "query",
            "required": true,
            "description": "Ширина этикетки",
            "schema": {
              "type": "integer",
              "enum": [58, 40]
            }
          },
          {
            "name": "height",
            "in": "query",
            "required": true,
            "description": "Высота этикетки",
            "schema": {
              "type": "integer",
              "enum": [40, 30]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orders": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 100,
                    "description": "Массив идентификаторов сборочных заданий",
                    "items": {
                      "type": "integer",
                      "format": "int64",
                      "example": 5346346
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Список этикеток",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stickers": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": false,
                            "description": "Идентификатор сборочного задания",
                            "example": 5346346
                          },
                          "partA": {
                            "type": "integer",
                            "nullable": false,
                            "description": "Первая часть идентификатора этикетки (для печати подписи)",
                            "example": 231648
                          },
                          "partB": {
                            "type": "integer",
                            "nullable": false,
                            "description": "Вторая часть идентификатора этикетки",
                            "example": 9753
                          },
                          "barcode": {
                            "type": "string",
                            "nullable": false,
                            "description": "Закодированное значение этикетки",
                            "example": "!uKEtQZVx"
                          },
                          "file": {
                            "type": "string",
                            "format": "byte",
                            "nullable": false,
                            "description": "Полное представление этикетки в заданном формате. (кодировка base64)",
                            "example": "PD94bWwgdmVyc2lvbj0iMS4wIj8+CjwhLS0gR2VuZXJhdGVkIGJ5IFNWR28gLS0+Cjxzdmcgd2lkdGg9IjQwMCIgaGVpZ2h0PSIzMDAiCiAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIj4KPHJlY3QgeD0iMCIgeT0iMCIgd2lkdGg9IjQwMCIgaGVpZQiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzE4IiB5PSIyMCIgd2lkdGg9IjYiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzI2IiB5PSIyMCIgd2lkdGg9IjIiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzMwIiB5PSIyMCIgd2lkdGg9IjQiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMjAiIHk9IjIwMCIgd2lkdGg9IjM1MCIgaGVpZ2h0PSI5MCIgc3R5bGU9ImZpbGw6YmxhY2siIC8+Cjx0ZXh0IHg9IjMwIiB5PSIyNDAiIHN0eWxlPSJmaWxsOndoaXRlO2ZvbnQtc2l6ZTozMHB0O3RleHQtYW5jaG9yOnN0YXJ0IiA+MjMxNjQ4PC90ZXh0Pgo8dGV4dCB4PSIzNTAiIHk9IjI3MCIgc3R5bGU9ImZpbGw6d2hpdGU7Zm9udC1zaXplOjUwcHQ7dGV4dC1hbmNob3I6ZW5kIiA+OTc1MzwvdGV4dD4KPC9zdmc+Cg=="
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  },
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "429": {
            "$ref": "#/components/responses/ExceededLimitRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/supplier/incomes": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Поставки",
        "description": "Поставки",
        "tags": ["Статистика"],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          }
        ],
        "responses": {
          "200": {
            "description": "Список поставок",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncomesItem"
                  }
                },
                "example": [
                  {
                    "incomeId": 12345,
                    "number": "",
                    "date": "2022-05-08T00:00:54",
                    "lastChangeDate": "2022-05-08T00:44:15.5",
                    "supplierArticle": "ABCDEF",
                    "techSize": "0",
                    "barcode": "2000328074123",
                    "quantity": 3,
                    "totalPrice": 0,
                    "dateClose": "2022-05-08T00:00:00",
                    "warehouseName": "Подольск",
                    "nmId": 1234567,
                    "status": "Принято"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenIsNotApplicable"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/supplier/stocks": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru/"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Склад",
        "description": "Склад. Данные обновляются раз в сутки. Сервис статистики не хранит историю остатков товаров, поэтому получить данные об остатках товаров на прошедшую, не сегодняшнюю, дату - невозможно.",
        "tags": ["Статистика"],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          }
        ],
        "responses": {
          "200": {
            "description": "Список товаров на складе",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StocksItem"
                  }
                },
                "example": [
                  {
                    "lastChangeDate": "2022-04-28T05:57:24.787",
                    "supplierArticle": "12345",
                    "techSize": "48",
                    "barcode": "",
                    "quantity": 0,
                    "isSupply": false,
                    "isRealization": true,
                    "quantityFull": 3,
                    "warehouseName": "Коледино",
                    "nmId": 1234567,
                    "subject": "Брюки",
                    "category": "Одежда",
                    "daysOnSite": 0,
                    "brand": "M",
                    "SCCode": "3200-1234",
                    "Price": 5000,
                    "Discount": 0
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenIsNotApplicable"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/supplier/orders": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru/"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Заказы",
        "description": "Заказы. <br>  Важно: гарантируется хранение данных по заказам не более 90 дней от даты заказа. Данные обновляются раз в 30 минут.  Точное время обновления информации в сервисе можно увидеть в поле `lastChangeDate`. <br> Для идентификации товаров из одного заказа, а также продаж по ним, следует использовать  поле `gNumber` (строки с одинаковым значением этого поля относятся к одному заказу) и номер  уникальной позиции в заказе `odid` (`rid`). \n",
        "tags": ["Статистика"],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          },
          {
            "$ref": "#/components/parameters/flag"
          }
        ],
        "responses": {
          "200": {
            "description": "Список заказов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdersItem"
                  }
                },
                "example": [
                  {
                    "date": "2022-03-02T14:34:05",
                    "lastChangeDate": "2022-03-02T19:30:16",
                    "supplierArticle": "12345",
                    "techSize": "0",
                    "barcode": "9990016520011",
                    "totalPrice": 120.56,
                    "discountPercent": 0,
                    "warehouseName": "Екатеринбург",
                    "oblast": "Московская",
                    "incomeID": 123456,
                    "odid": 12345678,
                    "nmId": 12345678,
                    "subject": "Респираторы",
                    "category": "Спецодежда и СИЗы",
                    "brand": "wildberries",
                    "isCancel": false,
                    "cancel_dt": "0001-01-01T00:00:00",
                    "gNumber": "12345678",
                    "sticker": ""
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Ошибка в запросе",
            "content": {
              "application/json": {
                "example": {
                  "errors": ["can't parse dateFrom"]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenIsNotApplicable"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Слишком много запросов"
          }
        }
      }
    },
    "/api/v1/supplier/sales": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru/"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Продажи",
        "description": "Продажи. <br> Важно: гарантируется хранение данных по заказам не более 90 дней от даты заказа. Данные обновляются раз в 30 минут. Точное время обновления информации в сервисе можно увидеть в поле `lastChangeDate`. <br> Для идентификации товаров из одного заказа, а также продаж по ним, следует использовать  поле `gNumber` (строки с одинаковым значением этого поля относятся к одному заказу) и номер  уникальной позиции в заказе `odid` (`rid`).  <br> Для расчета окончательной стоимости (суммы к оплате) следует пользоваться следующей формулой: <br> `priceWithDiscount = totalPrice * (1 - discountPercent/100)`\n",
        "tags": ["Статистика"],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          },
          {
            "$ref": "#/components/parameters/flag"
          }
        ],
        "responses": {
          "200": {
            "description": "Список продаж",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesItem"
                  }
                },
                "example": [
                  {
                    "date": "2022-03-04T00:00:00",
                    "lastChangeDate": "2022-03-06T10:11:07",
                    "supplierArticle": "12345",
                    "techSize": "",
                    "barcode": "123453559000",
                    "totalPrice": 0,
                    "discountPercent": 0,
                    "isSupply": false,
                    "isRealization": true,
                    "promoCodeDiscount": 0,
                    "warehouseName": "Подольск",
                    "countryName": "Россия",
                    "oblastOkrugName": "Центральный федеральный округ",
                    "regionName": "Московская",
                    "incomeID": 0,
                    "saleID": "D99937000247",
                    "odid": 456739003897,
                    "spp": 0,
                    "forPay": 0,
                    "finishedPrice": 0,
                    "priceWithDisc": 0,
                    "nmId": 1234567,
                    "subject": "Мультистайлеры",
                    "category": "Бытовая техника",
                    "brand": "Тест",
                    "IsStorno": 0,
                    "gNumber": "34343462218572569531",
                    "sticker": ""
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Ошибка в запросе",
            "content": {
              "application/json": {
                "example": {
                  "errors": ["can't parse dateFrom"]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenIsNotApplicable"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Слишком много запросов"
          }
        }
      }
    },
    "/api/v1/supplier/reportDetailByPeriod": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru/"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Отчет о продажах по реализации",
        "description": "Отчет о продажах по реализации.  <br> В отчете доступны данные за последние 3 месяца. <br> В случае отсутствия данных за указанный период метод вернет `null`. <br> Технический перерыв в работе метода: каждый понедельник с 3:00 до 16:00. <br> <a href=\"./excel/stat-excel.html\">Инструкция: Сохранение статистики в Excel</a>\n",
        "tags": ["Статистика"],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 100000
            },
            "required": false,
            "description": "Максимальное количество строк отчета, возвращаемых методом. Не может быть более 100000."
          },
          {
            "in": "query",
            "name": "dateTo",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": true,
            "description": "Конечная дата отчета"
          },
          {
            "in": "query",
            "name": "rrdid",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Уникальный идентификатор строки отчета. Необходим для получения отчета частями. \n<br>\nЗагрузку отчета нужно начинать с `rrdid = 0` и при последующих вызовах API передавать в запросе значение `rrd_id` из последней строки, полученной в результате предыдущего вызова. \n<br>\nТаким образом для загрузки одного отчета может понадобиться вызывать API до тех пор, пока количество возвращаемых строк не станет равным нулю.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Список реализованных позиций",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DetailReportItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenIsNotApplicable"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/count": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Получение РК",
        "description": "Получение количества рекламных кампаний (РК) поставщика",
        "tags": ["Реклама"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "all": {
                      "description": "Общее количество РК всех статусов и типов",
                      "type": "integer",
                      "example": 99
                    },
                    "adverts": {
                      "description": "Массив РК",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
                            "type": "integer",
                            "example": 6
                          },
                          "status": {
                            "description": "<dl> <dt>Статус РК:</dt> <dd><code>7</code> - РК завершена</dd> <dd><code>9</code> - идут показы</dd> <dd><code>11</code> - РК на паузе</dd> </dl>\n",
                            "type": "integer",
                            "example": 11
                          },
                          "count": {
                            "description": "Количество РК",
                            "type": "integer",
                            "example": 2
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncorrectSupplierId"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/adverts": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список РК",
        "description": "Метод позволяет получить список РК продавца.",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "<dl> <dt>Статус РК:</dt> <dd><code>7</code> - РК завершена</dd> <dd><code>9</code> - идут показы</dd> <dd><code>11</code> - РК на паузе</dd> </dl>\n",
            "schema": {
              "type": "integer",
              "enum": [7, 9, 11]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
            "schema": {
              "type": "integer",
              "enum": [4, 5, 6, 7]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Количество кампаний в ответе",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно первой РК",
            "schema": {
              "type": "integer",
              "example": 0
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "<dl> <dt>Порядок:</dt> <dd><code>create</code> (по времени создания РК)</dd> <dd><code>change</code> (по времени последнего изменения РК)</dd> <dd><code>id</code> (по идентификатору РК)</dd> </dl> <br>Например: <code>**/api/v0/adverts?type=6&limit=5&offset=10&<b>order=change</b>&direction=asc**</code>\n",
            "schema": {
              "type": "string",
              "enum": ["create", "change", "id"]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "<dl> <dt>Направление:</dt> <dd><code>desc</code> (от большего к меньшему)</dd> <dd><code>asc</code> (от меньшего к большему)</dd> </dl> <br>Например: <code>**/api/v0/adverts?type=6&limit=5&offset=10&order=change&<b>direction=asc</b>**</code>\n",
            "schema": {
              "type": "string",
              "enum": ["desc", "asc"]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "advertId": {
                        "description": "Идентификатор РК",
                        "type": "integer",
                        "example": 456
                      },
                      "type": {
                        "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
                        "type": "integer",
                        "example": 6
                      },
                      "status": {
                        "description": "<dl> <dt>Статус РК:</dt> <dd><code>7</code> - РК завершена</dd> <dd><code>9</code> - идут показы</dd> <dd><code>11</code> - РК на паузе</dd> </dl>\n",
                        "type": "integer",
                        "example": 11
                      },
                      "dailyBudget": {
                        "description": "<p>Сумма дневного бюджета <span class=\"new\">new</span></p>",
                        "type": "string"
                      },
                      "createTime": {
                        "description": "Время создания РК",
                        "type": "string",
                        "example": "2022-03-09T10:50:21.831623+03:00"
                      },
                      "changeTime": {
                        "description": "Время последнего изменения РК",
                        "type": "string",
                        "example": "2022-12-22T18:24:19.808701+03:00"
                      },
                      "startTime": {
                        "description": "<p>Время последнего запуска РК <span class=\"new\">new</span></p>",
                        "type": "string",
                        "example": "2022-03-09T12:50:21.831623+03:00"
                      },
                      "endTime": {
                        "description": "<p>Время завершения РК (state 7) <span class=\"new\">new</span></p>",
                        "type": "string",
                        "example": "2022-11-09T14:40:21.831623+03:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Кампании не найдены"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IncorrectType"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorProcesRequestParam"
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/advert": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Информация о РК",
        "description": "Получение информации об одной РК",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор РК",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "advertId": {
                      "description": "Идентификатор РК",
                      "type": "integer",
                      "example": 1234
                    },
                    "type": {
                      "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
                      "type": "integer",
                      "example": 4
                    },
                    "status": {
                      "description": "<dl> <dt>Статус РК:</dt> <dd><code>7</code> - РК завершена</dd> <dd><code>9</code> - идут показы</dd> <dd><code>11</code> - РК на паузе</dd> </dl>\n",
                      "type": "integer",
                      "example": 9
                    },
                    "dailyBudget": {
                      "description": "Дневной бюджет, если не установлен, то 0",
                      "type": "integer"
                    },
                    "createTime": {
                      "description": "Время создания РК",
                      "type": "string",
                      "example": "2022-03-09T10:50:21.831623+03:00"
                    },
                    "changeTime": {
                      "description": "Время последнего изменения РК",
                      "type": "string",
                      "example": "2022-12-22T18:24:19.808701+03:00"
                    },
                    "startTime": {
                      "description": "Дата запуска РК",
                      "type": "string"
                    },
                    "endTime": {
                      "description": "Дата завершения РК",
                      "type": "string"
                    },
                    "name": {
                      "description": "Название РК",
                      "type": "string"
                    },
                    "params": {
                      "description": "Параметры РК",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "subjectName": {
                            "description": "Название предметной группы (для РК в поиске и рекомендациях)",
                            "type": "string"
                          },
                          "active": {
                            "description": "<p>Флаг активности РК, <code>true</code> - активна, <code>false</code> - неактивна <span class=\"new\">new</span></p>",
                            "type": "boolean"
                          },
                          "intervals": {
                            "description": "Интервалы часов показа РК",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Begin": {
                                  "description": "Время начала показов",
                                  "type": "integer"
                                },
                                "End": {
                                  "description": "Время окончания показов",
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "price": {
                            "description": "Текущая ставка",
                            "type": "integer"
                          },
                          "menuId": {
                            "description": "Идентификатор меню, где размещается РК (для РК в каталоге)",
                            "type": "integer"
                          },
                          "subjectId": {
                            "description": "Идентификатор предметной группы, для которой создана РК (для РК в поиске и рекомендациях)",
                            "type": "integer"
                          },
                          "setId": {
                            "description": "Идентификатор сочетания предмета и пола (для РК в карточке товара)",
                            "type": "integer"
                          },
                          "setName": {
                            "description": "Сочетание предмета и пола (для РК в карточке товара)",
                            "type": "string"
                          },
                          "menuName": {
                            "description": "Название меню, где размещается РК (для РК в каталоге)"
                          },
                          "nms": {
                            "description": "Массив номенклатур РК",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "nm": {
                                  "type": "integer",
                                  "description": "Числовой идентификатор номенклатуры Wildberries (<code>nmId</code>)"
                                },
                                "active": {
                                  "type": "boolean",
                                  "description": "Состояние номенклатуры (<code>true</code> - активна или <code>false</code> - неактивна)\n"
                                }
                              }
                            }
                          }
                        }
                      },
                      "example": [
                        {
                          "subjectName": "Платья",
                          "intervals": [
                            {
                              "Begin": 3,
                              "End": 20
                            }
                          ],
                          "dailyBudget": 0,
                          "price": 50,
                          "menuId": 776
                        },
                        {
                          "subjectName": "Платья",
                          "intervals": [],
                          "dailyBudget": 1500,
                          "price": 234,
                          "menuId": 667
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Кампания не найдена"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InvalidRcId"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/start": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Запуск РК",
        "description": "РК в статусе <b>\"11 - на паузе\"</b> - можно снова запустить. <br>Для запуска необходимо, чтобы у РК были активные ставки. <br><b>GET</b> на `/api/v0/start?id=***` - в ответ `200`, если статус изменен, или `400`, если это сделать не удалось.\n",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор РК",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Статус изменен"
          },
          "400": {
            "description": "Статус не изменен",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InvalidRcId"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Статус не изменен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusNoChange"
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/pause": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Пауза РК",
        "description": "РК в статусе <b>\"9 - идут показы\"</b> - можно запаузить, сделав <b>GET</b> на  `/api/v0/pause?id=***`.\n",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор РК",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Статус изменен"
          },
          "400": {
            "description": "Статус не изменен",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InvalidRcId"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Статус не изменен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusNoChange"
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/stop": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Завершение РК",
        "description": "Метод позволяет завершить РК, находящиеся в статусе 9 или 11.",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор РК",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Статус изменен"
          },
          "400": {
            "description": "Статус не изменен",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InvalidRcId"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Статус не изменен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusNoChange"
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/cpm": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список ставок",
        "description": "Получение списка ставок для типа размещения. <br>Данные в ответе отсортированы по величине ставки от большей к меньшей.\n",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
            "schema": {
              "type": "integer",
              "enum": [4, 5, 6, 7]
            },
            "required": true
          },
          {
            "name": "param",
            "in": "query",
            "description": "Параметр запроса, по которому будет получен список ставок активных РК. <br>Должен быть значением `menuId`, `subjectId` или `setId` в зависимости от типа РК.\n",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Cmp": {
                        "description": "Размер ставки",
                        "type": "integer",
                        "example": 290
                      },
                      "Count": {
                        "description": "Количество ставок",
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IncorrectParam"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectType"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AmountNotChanged"
                    },
                    {
                      "$ref": "#/components/schemas/RequestBodyProcessError"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Изменение ставки у РК",
        "description": "Изменение ставки у рекламной кампании <br>Доступно для РК в карточке товара, поиске или рекомендациях\n",
        "tags": ["Реклама"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "advertId",
                  "type",
                  "cpm",
                  "param"
                ],
                "properties": {
                  "advertId": {
                    "description": "Идентификатор РК, где меняется ставка",
                    "type": "integer",
                    "example": 789
                  },
                  "type": {
                    "description": "<dl> <dt>Тип РК, где меняется ставка:</dt> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
                    "type": "integer",
                    "enum": [5, 6, 7]
                  },
                  "cpm": {
                    "description": "Новое значение ставки",
                    "type": "integer",
                    "example": 456
                  },
                  "param": {
                    "description": "Параметр, для которого будет внесено изменение (является значением `subjectId` или `setId` в зависимости от типа РК)\n",
                    "type": "integer",
                    "example": 23
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Размер ставки изменен"
          },
          "400": {
            "description": "Размер ставки не изменен",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IncorrectParam"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectType"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectCpm"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Размер ставки не изменен",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RequestBodyProcessError"
                    },
                    {
                      "$ref": "#/components/schemas/AmountNotChanged"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/allcpm": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список ставок по типу размещения РК",
        "description": "Метод позволяет получить список ставок по типу размещения РК.<br> С помощью этого метода изменить ставку невозможно.\n",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
            "schema": {
              "type": "integer",
              "enum": [4, 5, 6, 7]
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "param": {
                    "description": "Массив параметров запроса, по которым будет получен список ставок активных РК: должен быть значением `menuId` (для РК в каталоге), `subjectId` (для РК в поиске и рекомендациях) или `setId` (для РК в карточке товара).\n",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              },
              "example": {
                "param": [699, 344, 385]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "param": {
                        "description": "Значение параметра (param) запроса",
                        "type": "integer"
                      },
                      "cpm": {
                        "description": "Информация о ставке(-ах)",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Cpm": {
                              "description": "Размер ставки",
                              "type": "integer"
                            },
                            "Count": {
                              "description": "Количество ставок",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "param": 344,
                    "cpm": [
                      {
                        "Cpm": 235,
                        "Count": 1
                      }
                    ]
                  },
                  {
                    "param": 385,
                    "cpm": [
                      {
                        "Cpm": 187,
                        "Count": 1
                      },
                      {
                        "Cpm": 185,
                        "Count": 2
                      },
                      {
                        "Cpm": 179,
                        "Count": 2
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RequestBodyProcessError"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/active": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Изменение активности предметной группы для РК в поиске",
        "description": "Метод позволяет изменить активность предметной группы для рекламы в поиске.<br> Изменение активности доступно только для РК в статусе 9 или 11.\n",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор РК",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          },
          {
            "name": "subjectId",
            "in": "query",
            "description": "Идентификатор предметной группы, для которой меняется активность",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "description": "Новое состояние (`true` - сделать группу активной или `false` - сделать группу неактивной)",
            "schema": {
              "type": "string",
              "example": "true"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Статус изменен"
          },
          "400": {
            "description": "Статус не изменен",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/IncorrectActive"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectStatus"
                    },
                    {
                      "$ref": "#/components/schemas/InvalidRcId"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSubjectID"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Размер ставки не изменен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitySubjectGroupNotChanged"
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/rename": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Переименование РК",
        "description": "Метод позволяет переименовать рекламную кампанию.",
        "tags": ["Реклама"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["advertId", "name"],
                "properties": {
                  "advertId": {
                    "type": "integer",
                    "description": "Идентификатор РК, у которой меняется название"
                  },
                  "name": {
                    "type": "string",
                    "description": "Новое название (максимум 100 символов)"
                  }
                }
              },
              "example": {
                "advertId": 2233344,
                "name": "newnmame"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Статус изменен"
          },
          "400": {
            "description": "Неверная форма запроса",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InvalidRcId"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectName"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/RequestBodyProcessError"
                    },
                    {
                      "$ref": "#/components/schemas/CompanyNameChangeErr"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/intervals": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Изменение интервалов показа РК",
        "description": "Метод позволяет изменить временной интервал показа рекламной кампании.",
        "tags": ["Реклама"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "advertId",
                  "type",
                  "intervals",
                  "param"
                ],
                "properties": {
                  "advertId": {
                    "type": "integer",
                    "description": "Идентификатор РК, у которой меняется бюджет"
                  },
                  "intervals": {
                    "description": "Массив новых значений для интервалов. <br> Максимальное количество интервалов `24`.\n",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "begin": {
                          "type": "integer",
                          "description": "Время начала показов, по 24 часовой схеме (\"begin\": 15)"
                        },
                        "end": {
                          "type": "integer",
                          "description": "Время окончания показов, по 24 часовой схеме (\"end\": 21)"
                        }
                      }
                    }
                  },
                  "param": {
                    "type": "integer",
                    "description": "Параметр, для которого будет внесено изменение, должен быть значением `menuId` (для РК в каталоге), `subjectId` (для РК в поиске и рекомендациях) или `setId` (для РК в карточке товара)\n"
                  }
                }
              },
              "example": {
                "advertId": 3344123,
                "intervals": [
                  {
                    "begin": 3,
                    "end": 5
                  },
                  {
                    "begin": 19,
                    "end": 21
                  }
                ],
                "param": 275
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Статус изменен"
          },
          "400": {
            "description": "Неверная форма запроса",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InvalidRcId"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectParam"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectNumDisplayIntervals"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectDisplayInterval"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CampaignIntervalsNotChanged"
                    },
                    {
                      "$ref": "#/components/schemas/DisplayIntervalError"
                    },
                    {
                      "$ref": "#/components/schemas/RequestBodyProcessError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/nmactive": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Изменение активности номенклатур РК",
        "description": "Метод позволяет изменить активность номенклатур в РК.",
        "tags": ["Реклама"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "advertId",
                  "type",
                  "active",
                  "param"
                ],
                "properties": {
                  "advertId": {
                    "type": "integer",
                    "description": "Идентификатор РК"
                  },
                  "active": {
                    "description": "Массив значений активности для номенклатур. <br> Максимальноe количество номенклатур в запросе `50`.\n",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "nm": {
                          "type": "integer",
                          "description": "Артикул WB (`nmId`)"
                        },
                        "active": {
                          "type": "boolean",
                          "description": "Новое состояние (`true` - сделать номенклатуру активной или `false` - сделать номенклатуру неактивной)"
                        }
                      }
                    }
                  },
                  "param": {
                    "type": "integer",
                    "description": "Параметр, для которого будет внесено изменение, должен быть значением `menuId` (для РК в каталоге), `subjectId` (для РК в поиске и рекомендациях) или `setId` (для РК в карточке товара).\n"
                  }
                }
              },
              "example": {
                "advertId": 456789,
                "active": [
                  {
                    "nm": 2116745,
                    "active": true
                  },
                  {
                    "nm": 301402,
                    "active": true
                  }
                ],
                "param": 275
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Статус изменен"
          },
          "400": {
            "description": "Неверная форма запроса",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InvalidRcId"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectParam"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectActive"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectNumItems"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectNm"
                    },
                    {
                      "$ref": "#/components/schemas/IncorrectSupplierId"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ActivityNomNotChanged"
                    },
                    {
                      "$ref": "#/components/schemas/RequestBodyProcessError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/params/subject": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Словарь значений параметра subjectId",
        "description": "Метод позволяет получить список значений параметра <code>subjectId</code>.",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор предметной группы, для которой создана РК (для РК в поиске и рекомендациях). <br> Принимает значение параметра `subjectId` из РК. <br> При пустом параметре вернётся весь список существующих значений.\n",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Значение для параметра `subjectId`",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Название предметной группы, для которой создана РК",
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 699,
                    "name": "Гелевые полоски"
                  },
                  {
                    "id": 12345,
                    "name": "Гелевые кружочки"
                  }
                ]
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncorrectSupplierId"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/params/menu": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Словарь значений параметра menuId",
        "description": "Метод позволяет получить список значений параметра <code>menuId</code>.",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор меню, где размещается РК (для РК в каталоге). <br> Принимает значение параметра `menuId` из РК. <br> При пустом параметре вернётся весь список существующих значений.\n",
            "schema": {
              "type": "integer",
              "example": 8967
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Значение для параметра `menuId`",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Название меню, где размещается РК",
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 8967,
                    "name": "Уход за кожей"
                  }
                ]
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncorrectSupplierId"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/params/set": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Словарь значений параметра setId",
        "description": "Метод позволяет получить список значений параметра <code>setId</code>.",
        "tags": ["Реклама"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор сочетания предмета и пола (для РК в карточке товара). <br> Принимает значение параметра `setId` из РК. <br> При пустом параметре вернётся весь список существующих значений.\n",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Значение для параметра `setId`",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Сочетание предмета и пола",
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 477,
                    "name": "Подушки для малышей"
                  },
                  {
                    "id": 744,
                    "name": "Хлопушки для малышей"
                  }
                ]
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncorrectSupplierId"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/questions/count-unanswered": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Неотвеченные вопросы",
        "description": "Метод позволяет получить количество неотвеченных вопросов за сегодня и за всё время.",
        "tags": ["Вопросы"],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countUnanswered": {
                          "type": "integer",
                          "description": "Количество неотвеченных вопросов",
                          "example": 24
                        },
                        "countUnansweredToday": {
                          "type": "integer",
                          "description": "Количество неотвеченных вопросов за сегодня",
                          "example": 0
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки",
                      "example": ""
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/new-feedbacks-questions": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Непросмотренные отзывы и вопросы",
        "description": "Метод отображает информацию о наличии у продавца непросмотренных отзывов и вопросов.",
        "tags": ["Вопросы"],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "hasNewQuestions": {
                          "type": "boolean",
                          "description": "Есть ли непросмотренные вопросы (`true` есть, `false` нет)",
                          "example": true
                        },
                        "hasNewFeedbacks": {
                          "type": "boolean",
                          "description": "Есть ли непросмотренные отзывы (`true` есть, `false` нет)",
                          "example": false
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки",
                      "example": ""
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/questions/products/rating": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Часто спрашиваемые товары",
        "description": "Метод позволяет получить товары, про которые чаще всего спрашивают.",
        "tags": ["Вопросы"],
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "Количество запрашиваемых товаров (max. 100)",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "products": {
                          "description": "Массив структур товаров",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "nmId": {
                                "type": "integer",
                                "description": "Артикул WB",
                                "example": 21573649
                              },
                              "imtId": {
                                "type": "integer",
                                "description": "Идентификатор карточки товара",
                                "example": 15384080
                              },
                              "productName": {
                                "type": "string",
                                "description": "Название товара",
                                "example": "Чехол для телефона iPhone 11"
                              },
                              "brandName": {
                                "type": "string",
                                "description": "Бренд товара",
                                "example": "Case"
                              },
                              "questionsCount": {
                                "type": "string",
                                "description": "Количество вопросов",
                                "example": 11
                              }
                            }
                          }
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки",
                      "example": ""
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/questions": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список вопросов",
        "description": "Метод позволяет получить список вопросов по заданным параметрам с пагинацией и сортировкой.",
        "tags": ["Вопросы"],
        "parameters": [
          {
            "name": "isAnswered",
            "in": "query",
            "description": "Отвеченные вопросы (`true`) или неотвеченные вопросы(`false`)\n",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "nmId",
            "in": "query",
            "description": "Артикул WB",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Количество вопросов (max. 10 000)",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Количество вопросов для пропуска",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "description": "Сортировка вопросов по дате (`dateAsc`/`dateDesc`)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countUnanswered": {
                          "type": "integer",
                          "description": "Количество необработанных вопросов"
                        },
                        "countArchive": {
                          "type": "integer",
                          "description": "Количество обработанных вопросов"
                        },
                        "questions": {
                          "description": "Массив структур вопросов",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "id вопроса"
                              },
                              "text": {
                                "type": "string",
                                "description": "Текст вопроса"
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Дата и время создания вопроса"
                              },
                              "state": {
                                "type": "string",
                                "description": "<dt>Статус вопроса:</dt> <dd>`none` - вопрос отклонён продавцом (такой вопрос не отображается на портале покупателей)</dd> <dd>`wbRu` - ответ предоставлен, вопрос отображается на сайте покупателей</dd> <dd>`suppliersPortalSynch` - новый вопрос</dd>\n"
                              },
                              "answer": {
                                "description": "Структура ответа",
                                "type": "object",
                                "properties": {
                                  "text": {
                                    "type": "string",
                                    "description": "Текст ответа"
                                  },
                                  "editable": {
                                    "type": "boolean",
                                    "description": "Можно ли отредактировать ответ (`false` - нельзя, `true` - можно)"
                                  },
                                  "createDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Дата и время создания ответа"
                                  }
                                }
                              },
                              "productDetails": {
                                "type": "object",
                                "description": "Структура товара",
                                "properties": {
                                  "nmId": {
                                    "type": "integer",
                                    "description": "Артикул WB"
                                  },
                                  "imtId": {
                                    "type": "integer",
                                    "description": "Идентификатор карточки товара"
                                  },
                                  "productName": {
                                    "type": "string",
                                    "description": "Название товара"
                                  },
                                  "supplierArticle": {
                                    "type": "string",
                                    "description": "Артикул продавца"
                                  },
                                  "supplierName": {
                                    "type": "string",
                                    "description": "Имя продавца"
                                  },
                                  "brandName": {
                                    "type": "string",
                                    "description": "Название бренда"
                                  }
                                }
                              },
                              "wasViewed": {
                                "type": "boolean",
                                "description": "Просмотрен ли вопрос"
                              }
                            }
                          }
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки",
                      "example": ""
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                },
                "example": {
                  "data": {
                    "countUnanswered": 24,
                    "countArchive": 508,
                    "questions": [
                      {
                        "id": "2ncBtX4B9I0UHoornoqG",
                        "text": "Текст вопроса",
                        "createdDate": "2022-02-01T11:18:08.769513469Z",
                        "state": "suppliersPortalSynch",
                        "answer": null,
                        "productDetails": {
                          "imtId": 11157265,
                          "nmId": 14917842,
                          "productName": "Кофе",
                          "supplierArticle": "123401",
                          "supplierName": " ГП Реклама и услуги",
                          "brandName": "Nescofe"
                        },
                        "wasViewed": false,
                        "isOverdue": true
                      }
                    ]
                  },
                  "error": false,
                  "errorText": "",
                  "additionalErrors": null
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Работа с вопросами",
        "description": "<dl> <dt>В зависимости от тела запроса можно:</dt> <dd>Просмотреть вопрос.</dd> <dd>Отклонить вопрос.</dd> <dd>Ответить на вопрос.</dd> </dl>\n",
        "tags": ["Вопросы"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": ["id", "wasViewed"],
                    "properties": {
                      "id": {
                        "description": "Id вопроса",
                        "type": "string",
                        "example": "n5um6IUBQOOSTxXoo0gV"
                      },
                      "wasViewed": {
                        "description": "Просмотрен (`true`), не просмотрен (`false`)",
                        "type": "boolean",
                        "example": true
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": ["id", "answer", "state"],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id вопроса",
                        "example": "n5um6IUBQOOSTxXoo0gV"
                      },
                      "answer": {
                        "type": "object",
                        "required": ["text"],
                        "properties": {
                          "text": {
                            "type": "string",
                            "description": "Текст ответа",
                            "example": "текст ответа"
                          }
                        }
                      },
                      "state": {
                        "type": "string",
                        "description": "Статус вопроса (none) - вопрос отклонён продавцом (такой вопрос не отображается на портале покупателей).\n"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": ["id", "answer", "state"],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id вопроса",
                        "example": "n5um6IUBQOOSTxXoo0gV"
                      },
                      "answer": {
                        "type": "object",
                        "required": ["text"],
                        "properties": {
                          "text": {
                            "type": "string",
                            "description": "Текст ответа",
                            "example": "текст ответа"
                          }
                        }
                      },
                      "state": {
                        "type": "string",
                        "description": "Статус вопроса (wbRu) - ответ предоставлен, вопрос отображается на сайте покупателей.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": null,
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка"
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки"
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки"
                    }
                  }
                },
                "example": {
                  "data": null,
                  "error": false,
                  "errorText": "",
                  "additionalErrors": null
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          },
          "404": {
            "description": "Ошибка - не найдено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr404"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/questions/report": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Получение вопросов в формате XLSX",
        "description": "Метод позволяет получить XLSX файл с вопросами в кодировке BASE64.",
        "tags": ["Вопросы"],
        "parameters": [
          {
            "name": "isAnswered",
            "in": "query",
            "description": "Обработанные вопросы (`true`) или необработанные вопросы(`false`)\n",
            "schema": {
              "type": "boolean",
              "example": false
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "fileName": {
                          "type": "string",
                          "description": "Имя файла",
                          "example": "report.xlsx"
                        },
                        "file": {
                          "type": "string",
                          "format": "binary",
                          "description": "Файл",
                          "example": "UEsDBBQAC ... CAADMdQAAAAA="
                        },
                        "contentType": {
                          "type": "string",
                          "description": "Тип контента",
                          "example": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки",
                      "example": ""
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedbacks/count-unanswered": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Необработанные отзывы",
        "description": "Метод позволяет получить количество необработанных отзывов за сегодня, за всё время, и среднюю оценку всех отзывов.",
        "tags": ["Отзывы"],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countUnanswered": {
                          "type": "integer",
                          "description": "Количество необработанных отзывов",
                          "example": 1
                        },
                        "countUnansweredToday": {
                          "type": "integer",
                          "description": "Количество необработанных отзывов за сегодня",
                          "example": 0
                        },
                        "valuation": {
                          "type": "string",
                          "description": "Средняя оценка всех отзывов",
                          "example": "4.7"
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки",
                      "example": ""
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parent-subjects": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Родительские категории товаров",
        "description": "Метод позволяет получить список родительских категорий товаров, которые есть у продавца.",
        "tags": ["Отзывы"],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "subjectId": {
                            "type": "integer",
                            "description": "Id категории товара",
                            "example": 1162
                          },
                          "subjectName": {
                            "type": "string",
                            "description": "Название категории товара",
                            "example": "Строительные инструменты"
                          }
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки",
                      "example": ""
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedbacks/products/rating": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Средняя оценка товаров по родительской категории",
        "description": "Метод позволяет получить среднюю оценку товаров по родительской категории.",
        "tags": ["Отзывы"],
        "parameters": [
          {
            "name": "subjectId",
            "in": "query",
            "required": true,
            "description": "id категории товара",
            "schema": {
              "type": "integer",
              "example": 3109
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "valuation": {
                            "type": "string",
                            "description": "Средняя оценка товаров",
                            "example": "4.8"
                          },
                          "feedbacksCount": {
                            "type": "integer",
                            "description": "Количество отзывов по запрашиваемой категории",
                            "example": 277
                          }
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки",
                      "example": ""
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedbacks/products/rating/top": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Товары с наибольшей и наименьшей средней оценкой по родительской категории",
        "description": "Метод позволяет получить список из двух товаров, с наибольшей и наименьшей средней оценкой, по родительской категории.",
        "tags": ["Отзывы"],
        "parameters": [
          {
            "name": "subjectId",
            "in": "query",
            "required": true,
            "description": "id категории товара",
            "schema": {
              "type": "integer",
              "example": 3109
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productMaxRating": {
                            "$ref": "#/components/schemas/productRating"
                          },
                          "productMinRating": {
                            "$ref": "#/components/schemas/productRating"
                          }
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка"
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки"
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                },
                "example": {
                  "data": {
                    "productMaxRating": {
                      "nmId": 14917842,
                      "imtId": 11157265,
                      "subjectId": 5135,
                      "valuationsSum": 1260,
                      "feedbacksCount": 252,
                      "valuation": 5,
                      "productName": "Кофе",
                      "supplierArticle": "123401",
                      "brandName": "Nescafe"
                    },
                    "productMinRating": {
                      "nmId": 14917846,
                      "imtId": 11157269,
                      "subjectId": 5134,
                      "valuationsSum": 4,
                      "feedbacksCount": 2,
                      "valuation": 2,
                      "productName": "Кофе",
                      "supplierArticle": "425501",
                      "brandName": "Nescafe"
                    }
                  },
                  "error": false,
                  "errorText": "",
                  "additionalErrors": null
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedbacks": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список отзывов",
        "description": "Метод позволяет получить список отзывов по заданным параметрам с пагинацией и сортировкой.",
        "tags": ["Отзывы"],
        "parameters": [
          {
            "name": "isAnswered",
            "in": "query",
            "required": true,
            "description": "Обработанные отзывы (`true`) или необработанные отзывы(`false`)",
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "nmId",
            "in": "query",
            "description": "Артикул WB",
            "schema": {
              "type": "integer",
              "example": 5870243
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": true,
            "description": "Количество отзывов (max. 10 000)",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": true,
            "description": "Количество отзывов для пропуска",
            "schema": {
              "type": "integer",
              "example": 0
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Сортировка отзывов по дате (dateAsc/dateDesc)",
            "schema": {
              "type": "string",
              "enum": ["dateAsc", "dateDesc"]
            }
          },
          {
            "name": "hasSupplierComplaint",
            "in": "query",
            "description": "Отзывы с жалобой продавца(`true`) или без жалобы(`false`)",
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countUnanswered": {
                          "type": "integer",
                          "description": "Количество необработанных отзывов"
                        },
                        "countArchive": {
                          "type": "integer",
                          "description": "Количество обработанных отзывов"
                        },
                        "feedbacks": {
                          "$ref": "#/components/schemas/responseFeadback"
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки"
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                },
                "example": {
                  "data": {
                    "countUnanswered": 1,
                    "countArchive": 1,
                    "feedbacks": [
                      {
                        "id": "n5um6IUBQOOSTxXoo0gV",
                        "imtId": 4702466,
                        "nmId": 5870243,
                        "subjectId": 390,
                        "userName": "userName",
                        "text": "Great product. Thank you",
                        "productValuation": 5,
                        "createdDate": "2023-01-25T11:18:33Z",
                        "updatedDate": "2023-01-26T11:09:54Z",
                        "answer": null,
                        "state": "none",
                        "productDetails": {
                          "imtId": 4702466,
                          "nmId": 5870243,
                          "productName": "Case for phone",
                          "supplierArticle": "41058/transparent",
                          "supplierName": "ГП Реклама и услуги",
                          "brandName": "1000 Catalog",
                          "size": "size"
                        },
                        "photoLinks": [
                          {
                            "fullSize": "feedbacks/470/4702466/2dc59933-00b5-4ba5-a11a-96312ef179f1_fs.jpg",
                            "miniSize": "feedbacks/470/4702466/2dc59933-00b5-4ba5-a11a-96312ef179f1_ms.jpg"
                          }
                        ],
                        "video": null,
                        "wasViewed": true,
                        "isCreationSupplierComplaint": true,
                        "supplierComplaint": null
                      }
                    ]
                  },
                  "error": false,
                  "errorText": "",
                  "additionalErrors": null
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Работа с отзывом",
        "description": "<dl> <dt>В зависимости от тела запроса можно:</dt> <dd>Просмотреть отзыв.</dd> <dd>Ответить на отзыв.</dd> <dd>Создать жалобу на отзыв.</dd> </dl>\n",
        "tags": ["Отзывы"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": ["id", "wasViewed"],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id отзыва",
                        "example": "n5um6IUBQOOSTxXoo0gV"
                      },
                      "wasViewed": {
                        "type": "boolean",
                        "description": "Просмотрен (`true`) или не просмотрен (`false`)",
                        "example": true
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": ["id", "text"],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id отзыва",
                        "example": "n5um6IUBQOOSTxXoo0gV"
                      },
                      "text": {
                        "type": "string",
                        "description": "Текст ответа (max. 999 символов)",
                        "example": "текст ответа"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "createSupplierComplaint"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Id отзыва",
                        "example": "n5um6IUBQOOSTxXoo0gV"
                      },
                      "createSupplierComplaint": {
                        "type": "boolean",
                        "description": "Создать жалобу (true)",
                        "example": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешно"
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          },
          "404": {
            "description": "Ошибка - не найдено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr404"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedbacks/report": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Получение отзывов в формате XLSX",
        "description": "Метод позволяет получить XLSX файл с отзывами в кодировке BASE64. <br> За один запрос можно получить 5000 отзывов. <br> На данный момент всего можно получить 200 000 последних отзывов.\n",
        "tags": ["Отзывы"],
        "parameters": [
          {
            "name": "isAnswered",
            "in": "query",
            "description": "Необработанный(`false`) или в архиве(`true`)",
            "schema": {
              "type": "boolean",
              "enum": [true, false]
            },
            "required": true
          },
          {
            "name": "hasSupplierComplaint",
            "in": "query",
            "description": "Отзывы с жалобой продавца(`true`) или без жалобы(`false`)",
            "schema": {
              "type": "boolean",
              "enum": [true, false]
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Параметр пагинации, указывает сколько отзывов пропустить <span class=\"new\">new</span>",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "fileName": {
                          "type": "string",
                          "description": "Имя файла"
                        },
                        "file": {
                          "type": "string",
                          "format": "binary",
                          "description": "Файл"
                        },
                        "contentType": {
                          "type": "string",
                          "description": "Тип контента"
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки"
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                },
                "example": {
                  "data": {
                    "fileName": "report.xlsx",
                    "file": "UEsDBBQA ... ACAADxGgAAAAA=",
                    "contentType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                  },
                  "error": false,
                  "errorText": "",
                  "additionalErrors": null
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedbacks/archive": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список архивных отзывов",
        "description": "Метод позволяет получить список архивных отзывов. <br> Отзыв становится архивным если на него предоставлен ответ или ответ не предоставлен в течение 30 дней со дня его публикации.\n",
        "tags": ["Отзывы"],
        "parameters": [
          {
            "name": "nmId",
            "in": "query",
            "description": "Артикул WB",
            "schema": {
              "type": "integer",
              "example": 14917842
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": true,
            "description": "Количество отзывов",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": true,
            "description": "Количество отзывов для пропуска",
            "schema": {
              "type": "integer",
              "example": 0
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Сортировка отзывов по дате (dateAsc/dateDesc)",
            "schema": {
              "type": "string",
              "enum": ["dateAsc", "dateDesc"]
            }
          },
          {
            "name": "hasSupplierComplaint",
            "in": "query",
            "description": "Отзывы с жалобой продавца(`true`) или без жалобы(`false`)",
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "feedbacks": {
                          "$ref": "#/components/schemas/responseFeadback"
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки"
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                },
                "example": {
                  "data": {
                    "feedbacks": [
                      {
                        "id": "z0fuK3wBIAjWoLmLkJKo",
                        "imtId": 11157265,
                        "nmId": 14917842,
                        "subjectId": 5135,
                        "userName": "userName",
                        "text": "Все отлично.Подарил теще. Красивое!",
                        "productValuation": 5,
                        "createdDate": "2011-11-01T16:41:39+04:00",
                        "updatedDate": "2022-06-21T12:02:42Z",
                        "answer": {
                          "text": "супер-пупер",
                          "state": "wbRu",
                          "editable": false
                        },
                        "state": "wbRu",
                        "productDetails": {
                          "imtId": 11157265,
                          "nmId": 14917842,
                          "productName": "Кофе",
                          "supplierArticle": "123401",
                          "supplierName": "тест",
                          "brandName": "Nescafe",
                          "size": "size"
                        },
                        "photoLinks": [
                          {
                            "fullSize": "feedbacks/470/4702466/2dc59933-00b5-4ba5-a11a-96312ef179f1_fs.jpg",
                            "miniSize": "feedbacks/470/4702466/2dc59933-00b5-4ba5-a11a-96312ef179f1_ms.jpg"
                          }
                        ],
                        "video": null,
                        "wasViewed": true,
                        "isCreationSupplierComplaint": false,
                        "supplierComplaint": null
                      }
                    ]
                  },
                  "error": false,
                  "errorText": "",
                  "additionalErrors": null
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedbacks/products/rating/nmid": {
      "servers": [
        {
          "url": "https://feedbacks-api.wildberries.ru"
        },
        {
          "url": "https://feedbacks-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Средняя оценка товара по артикулу WB",
        "description": "Метод позволяет получить среднюю оценку товара по его артикулу WB.",
        "tags": ["Отзывы"],
        "parameters": [
          {
            "name": "nmId",
            "in": "query",
            "description": "Артикул WB",
            "schema": {
              "type": "integer",
              "example": 14917842
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Успешно",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "valuation": {
                          "type": "string",
                          "description": "Средняя оценка товара",
                          "example": "4.3"
                        },
                        "feedbacksCount": {
                          "type": "integer",
                          "description": "Количество отзывов на данный товар",
                          "example": 16
                        }
                      }
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Есть ли ошибка",
                      "example": false
                    },
                    "errorText": {
                      "type": "string",
                      "description": "Описание ошибки",
                      "example": ""
                    },
                    "additionalErrors": {
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ошибка переданных параметров",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr400"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Ошибка авторизации",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/feedbackErr403"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ins": {
      "servers": [
        {
          "url": "https://recommend-api.wildberries.ru"
        },
        {
          "url": "https://recommend-api.wb.ru"
        }
      ],
      "post": {
        "tags": ["Рекомендации"],
        "summary": "Добавление рекомендаций",
        "description": "Метод позволяет добавить рекомендации к товару. <br> `ВАЖНО!` Если запрос прошел успешно (код ответа 200), а рекомендации не добавилась, то Вам необходимо проверить корректность отправленных значений.  <br>На данный момент в методе не предусмотрена валидация значений параметров.  <br>Тщательно проверяйте данные перед отправкой. <br>Ограничение по запросам: 120 запросов в минуту.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "список nm товаров и рекомендаций к ним",
                "items": {
                  "properties": {
                    "nm": {
                      "description": "Идентификатор товара (`nmId`), к которому добавляется рекомендация",
                      "type": "integer"
                    },
                    "recom": {
                      "description": "Список идентификаторов товаров (`nmId`), которые необходимо добавить в рекомендуемые",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "minimum": 1
                      }
                    }
                  },
                  "example": {
                    "nm": 1376382,
                    "recom": [
                      123456342, 789101112, 9877654321
                    ]
                  },
                  "required": ["nm", "recom"]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Рекомендации успешно добавлены"
          },
          "400": {
            "description": "Неверный синтаксис запроса",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "can't parse data from request"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервиса",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/del": {
      "servers": [
        {
          "url": "https://recommend-api.wildberries.ru"
        },
        {
          "url": "https://recommend-api.wb.ru"
        }
      ],
      "post": {
        "tags": ["Рекомендации"],
        "summary": "Удаление рекомендаций",
        "description": "Метод позволяет удалить рекомендации. <br> `ВАЖНО!` Если запрос прошел успешно (код ответа 200), а рекомендации не удалились, то Вам необходимо проверить корректность отправленных значений. На данный момент в методе не предусмотрена валидация значений параметров. Тщательно проверяйте данные перед отправкой\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "список nm товаров и рекомендаций к ним",
                "items": {
                  "type": "object",
                  "properties": {
                    "nm": {
                      "description": "Идентификатор товара (`nmId`), у которого необходимо удалить рекомендацию",
                      "type": "integer"
                    },
                    "recom": {
                      "description": "Список идентификаторов товаров (`nmId`), которые необходимо удалить из рекомендуемых",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "minimum": 1
                      }
                    }
                  },
                  "example": {
                    "nm": 1376382,
                    "recom": [
                      123456342, 789101112, 9877654321
                    ]
                  },
                  "required": ["nm", "recom"]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ОК"
          },
          "400": {
            "description": "Неверный синтаксис запроса",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "can't parse data from request"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервиса",
            "content": {
              "application/json": {
                "schema": {
                  "type": null
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/set": {
      "servers": [
        {
          "url": "https://recommend-api.wildberries.ru"
        },
        {
          "url": "https://recommend-api.wb.ru"
        }
      ],
      "post": {
        "tags": ["Рекомендации"],
        "summary": "Управление рекомендациями",
        "description": "Метод позволяет добавлять, удалять рекомендации.<br> Работает по принципу перезаписи, все что указано в recom, ставится взамен того, что было ранее.<br> Чтобы удалить рекомендации необходимо передать пустой массив recom.   \n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "список nm товаров и рекомендаций к ним",
                "items": {
                  "properties": {
                    "nm": {
                      "description": "Артикул WB (`nmId`), которому передается рекомендация",
                      "type": "integer"
                    },
                    "recom": {
                      "description": "Список артикулов WB (`nmId`), которые необходимо передать в рекомендуемые.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "minimum": 1
                      }
                    }
                  },
                  "example": {
                    "nm": 1376382,
                    "recom": [
                      123456342, 789101112, 9877654321
                    ]
                  },
                  "required": ["nm", "recom"]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешно"
          },
          "400": {
            "description": "Неверный синтаксис запроса",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "can't parse data from request"
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервиса",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/list": {
      "servers": [
        {
          "url": "https://recommend-api.wildberries.ru"
        },
        {
          "url": "https://recommend-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": ["Рекомендации"],
        "summary": "Список рекомендаций",
        "description": "Метод позволяет получить список рекомендаций по нескольким товарам",
        "parameters": [
          {
            "name": "nm",
            "in": "query",
            "description": "Артикул WB (`nmId`), по которому необходимо получить список рекомендаций. <br> (max. 200)\n",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "example": "472841443,38830552,549165191"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ограничение количества `nm` в ответе. (max. 999)",
            "schema": {
              "type": "integer",
              "maximum": 999
            },
            "example": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Список артикулов WB (`nmId`) рекомендуемых товаров",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Массив данных",
                      "type": "object",
                      "properties": {
                        "nm": {
                          "description": "Запрашиваемый `nmId`",
                          "type": "integer"
                        },
                        "list": {
                          "description": "Массив рекомендаций",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "nm": 472841443,
                      "list": [
                        6238338045, 388307553, 4224839053,
                        632425984, 652422909, 624212623,
                        422443902
                      ]
                    },
                    {
                      "nm": 38830552,
                      "list": [598514721]
                    },
                    {
                      "nm": 549165191,
                      "list": [1847413, 49785121]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TokenMissing"
                    },
                    {
                      "$ref": "#/components/schemas/TokenInvalid"
                    },
                    {
                      "$ref": "#/components/schemas/TokenNotFound"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
